<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wasin's Blog</title>
    <description>I blog about projects I'm working on. Mostly about mobile games, tech, web service, little tiny things I built for myself or for public, and tech/game industry-wide. Currently I'm living in Shenzhen, China. I'm running a small creative company with my girlfriend here.
</description>
    <link>http://blog.wasin.io/</link>
    <atom:link href="http://blog.wasin.io/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 31 Aug 2017 23:50:51 +0800</pubDate>
    <lastBuildDate>Thu, 31 Aug 2017 23:50:51 +0800</lastBuildDate>
    <generator>Jekyll v3.4.3</generator>
    
      <item>
        <title>Operate Company Banking in China - Base on China Merchants Bank</title>
        <description>&lt;p&gt;Running a small company by a few people, in my case 2, me and my girlfriend, you have to wear many hats in one person.&lt;/p&gt;

&lt;p&gt;If you have large budget to hire specialist, or someone to take care of it, it&amp;#39;s good. But if it&amp;#39;s in budget-plan, minimize cost, no plan to scale (it&amp;#39;s &lt;a href=&quot;https://dev.to/sehurlburt/were-stephanie-hurlburt-and-rich-geldreich-ask-us-anything/comments/kka&quot;&gt;fine&lt;/a&gt;), with an optimistic learn-them-(almost)-all mindset, this article might be beneficial to you.&lt;/p&gt;

&lt;p&gt;I base the example on CMB (China Merchants Bank). It should be familar approach in steps and things they handed to you. So if you&amp;#39;re using other banks, I hope you can adapt what I present you here to your case. In this article, I will be focusing on these two topics.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Tools/Cards Chinese bank gave it to you after we got company bank account and what we can do with them&lt;/li&gt;
&lt;li&gt;How to transfer money between company bank account &amp;amp; personal account&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The slight problem is that I&amp;#39;m based on macOS, the tools handed to us is based on Windows. So I&amp;#39;m going to show how to tackle this problem as well.&lt;/p&gt;

&lt;h1 id=&quot;what-tools-cards-chinese-bank-handed-to-you&quot;&gt;What Tools/Cards Chinese Bank Handed to You&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;So here let&amp;#39;s see what are the things Chinese Bank gave to you.&lt;/p&gt;

&lt;h2 id=&quot;1-payment-scrambler&quot;&gt;1. Payment Scrambler&lt;/h2&gt;

&lt;p&gt;&lt;center&gt;
&lt;img alt=&quot;payment scrambler device&quot; src=&quot;/assets/images/operate-bank-in-china/tools_cards/banking-company-device.jpg&quot; width=&quot;50%&quot;/&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;I don&amp;#39;t use it yet as it&amp;#39;s more suitable for mid-to-big company to approve payment to employees. Alternative is we can use cheque as a payment, but that means you have to buy cheque papers at the bank. I consulted them once, it&amp;#39;s pretty hard for small company to buy it. Anyway I list this device here too as a reference for all things the bank gave to you.&lt;/p&gt;

&lt;p&gt;Apart from that, you better consult Chinese people especially bank staff to help you set up. This device comes with a detail Chinese manual, but better to set up it properly, ask for help.&lt;/p&gt;

&lt;h2 id=&quot;2-bank-cards&quot;&gt;2. Bank cards&lt;/h2&gt;

&lt;p&gt;&lt;center&gt;
&lt;img alt=&quot;company bank cards&quot; src=&quot;/assets/images/operate-bank-in-china/tools_cards/banking-company-cards.jpg&quot;/&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;There are two cards.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Deposit Card&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Mainly you can deposit money to your company bank account directly via ATM machine, or inquire about current balance.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;C+ for bank statement&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is mainly used to print your company bank statement directly from available machine; mostly situated near major bank branch. You can select period of time for statements to be print. The following is the example of it. One transaction for one paper. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/operate-bank-in-china/tools_cards/banking-company-statement.jpg&quot; alt=&quot;company bank statement&quot;&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Both cards have the same password as set during registration/application at the bank.&lt;/p&gt;

&lt;h2 id=&quot;3-ukeys&quot;&gt;3. UKeys&lt;/h2&gt;

&lt;p&gt;&lt;center&gt;
&lt;img alt=&quot;ukeys&quot; src=&quot;/assets/images/operate-bank-in-china/tools_cards/banking-company-ukeys.jpg&quot; width=&quot;50%&quot;/&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;UKeys are short for USB-Keys. It&amp;#39;s like another layer of security that bank provided to you. When you authenticate yourself with UBank software, you will need to plug this device beforehand as the software itself will read and check information from it to allow you to successfully authenticate thus log in. There are two UKeys. One for initiator to initiate action i.e. transfering money, etc. Another for approval/rejection action on behalf of someone with higher authority to decide. We will talk more about it in latter part of this article.&lt;/p&gt;

&lt;h1 id=&quot;how-to-transfer-money-from-company-bank-account-to-personal-account&quot;&gt;How to Transfer Money From Company Bank Account to Personal Account&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;Now we will get into real action.&lt;/p&gt;

&lt;p&gt;What I will be showing you is the real transaction that happened. I red out those sensitive information but you will get the sense of what it is. Thing to note here is that as my company type is limited partnership, so the company asset is actually ours. It&amp;#39;s not separate entity like in corporate or LLC sense. So transfering money back and forth between your own company and your personal account can be done directly. I wonder there would be a few more steps for limited company as you need to declare asset in/out because company is separate entity.&lt;/p&gt;

&lt;p&gt;I consulted our company&amp;#39;s accounting firm to double check my understanding.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img alt=&quot;confirmed practice transfer money for partnership company&quot; src=&quot;/assets/images/operate-bank-in-china/finan-practice-confirmed.jpg&quot; width=&quot;60%&quot;/&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;All in all, consult your accountant to be 100% sure about financial practice in your country.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;get-virtualbox-and-windows-copy-iso&quot;&gt;Get VirtualBox and Windows Copy (.iso)&lt;/h2&gt;

&lt;p&gt;If you&amp;#39;re on macOS. You have to run Windows on virtual machine like &lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot;&gt;VirtualBox&lt;/a&gt; which is free to use and open source (thus clearly, not affiliated).&lt;/p&gt;

&lt;p&gt;Bare minimum, old version of Windows with minimum RAM and disk space is good enough to go. No need to be fancy.
I use Windows XP Professional 32-bit with a setup that has 512MB RAM, 3GB of disk space. My macOS is mid 2013 with 8 GB RAM. After installation, and applications, you will have almost 1 GB left. So it&amp;#39;s very bare minimum of what you need :)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I tried with &lt;a href=&quot;http://winebottler.kronenberg.org/&quot;&gt;winebottler&lt;/a&gt; and it didn&amp;#39;t work. I can start the application though with unrecognized Chinese character (if you need, English is fine though). But I realize later that it&amp;#39;s due to UKey isn&amp;#39;t recognized by my macOS. There&amp;#39;s even no USB listed from execution of command &lt;code&gt;diskutil list&lt;/code&gt;. So no luck there. You have to run on Windows.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Then you should have a copy of Windows .iso ready as you need to hook it up with VirtualBox to install the OS.&lt;/p&gt;

&lt;p&gt;I leave the part of setting up VirtualBox to you as it&amp;#39;s not the main part for this article.&lt;/p&gt;

&lt;h2 id=&quot;install-ubank-software-and-ukey-driver&quot;&gt;Install UBank Software and UKey driver&lt;/h2&gt;

&lt;p&gt;On Windows. Follow the step below.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Go to &lt;a href=&quot;http://www.cmbchina.com&quot;&gt;http://www.cmbchina.com&lt;/a&gt; and click on the links as shown&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&quot;/assets/images/operate-bank-in-china/app-setup/finan-ubank-1.png&quot;&gt;&lt;img src=&quot;/assets/images/operate-bank-in-china/app-setup/finan-ubank-1.png&quot; alt=&quot;cmbchina website - click 1&quot;&gt;&lt;/a&gt;
&lt;/center&gt;
&lt;sub&gt;Image is resized. Click for full resolution.&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&quot;/assets/images/operate-bank-in-china/app-setup/finan-ubank-2.png&quot;&gt;&lt;img src=&quot;/assets/images/operate-bank-in-china/app-setup/finan-ubank-2.png&quot; alt=&quot;cmbchina website - click 2&quot;&gt;&lt;/a&gt;
&lt;/center&gt;
&lt;sub&gt;Image is resized. Click for full resolution.&lt;/sub&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now scroll down to download driver, and UBank software as marked by circles as shown below&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/operate-bank-in-china/app-setup/finan-ubank-3.png&quot; alt=&quot;cmbchina website - click 3&quot;&gt;&lt;/p&gt;

&lt;p&gt;I include the links here just for pure reference. &lt;/p&gt;

&lt;p&gt;&lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;http://www.cmbchina.com/webpages/corporate/cardreaders.htm&quot;&gt;Driver&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://szdl.cmbchina.com/download/FB/FirmBank-9.3.0.15192.exe&quot;&gt;UBank 9.3.0.15192(2017.8.2)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/br&gt;&lt;/p&gt;

&lt;p&gt;But it&amp;#39;s much better for you to follow along as there might be newer version of software available especially UBank. It&amp;#39;s updated on average twice a month.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install UKey driver&lt;/p&gt;

&lt;p&gt;Scroll down the page to the following section.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/operate-bank-in-china/app-setup/ukey-driver-setup.png&quot; alt=&quot;ukey driver&quot;&gt;&lt;/p&gt;

&lt;p&gt;Click on &lt;a href=&quot;http://szdl.cmbchina.com/download/33-2000-XP-2003.zip&quot;&gt;2000 / XP / 2003&lt;/a&gt; or &lt;a href=&quot;http://szdl.cmbchina.com/download/33-VISTA.zip&quot;&gt;VISTA&lt;/a&gt; to dowload.
Again please don&amp;#39;t be mad at me to not give you a link right away. Better to follow along the steps, scroll to target section and hit link on screen as link might be changed in the future, or newer version is available. Link I give to you is for pure reference.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Unzip and Copy all files to &lt;code&gt;C:/windows/system32/drivers/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&quot;/assets/images/operate-bank-in-china/app-setup/ukey-driver-setup-2.png&quot;&gt;&lt;img src=&quot;/assets/images/operate-bank-in-china/app-setup/ukey-driver-setup-2.png&quot; alt=&quot;unzip and install ukey driver&quot;&gt;&lt;/a&gt;
&lt;/center&gt;
&lt;sub&gt;Image is resized. Click for full resolution.&lt;/sub&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install UBank software&lt;/p&gt;

&lt;p&gt;Follow along on screen. It&amp;#39;s straight forward. Also don&amp;#39;t worry about the error dialog shown at first, it makes no harm.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Testing Running UBank&lt;/p&gt;

&lt;p&gt;Plug in one of UKeys you have to your machine, it can be any of them for now as we just want to test.&lt;br&gt;
If you run Windows on VirtualBox, this means you just plugged in UKey into your host machine. You need to let VirtualBox knows that you have plugged in such thing.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/operate-bank-in-china/app-setup/activate-usb.png&quot; alt=&quot;activate usb on windows via virtualbox&quot;&gt;&lt;/p&gt;

&lt;p&gt;Yes, just click on usb-like-icon then click on &lt;code&gt;ExcelSecu USB Key [0100]&lt;/code&gt;. The name might be slightly different. But in any case, you can easily differentiate it from others.&lt;/p&gt;

&lt;p&gt;Now with UKey plugged in. Open UBank software.&lt;br&gt;
If all this set up is successful, when UBank launches, its UI will freeze a short amount of time (this means it&amp;#39;s reading from UKey) then it will &lt;strong&gt;populate&lt;/strong&gt; username into the field automatically for you. This part is important. If you didn&amp;#39;t see populated username on your username text field input, it has highly chance that it didn&amp;#39;t work.&lt;/p&gt;

&lt;p&gt;Again, to double check whether it&amp;#39;s all ok or not. Just try to log in.&lt;br&gt;
You need to click on &lt;code&gt;Switch to: login with digital...&lt;/code&gt; if current screen isn&amp;#39;t the same as image below, then enter the same password you&amp;#39;ve set during the time of registration &amp;amp; setup at the bank for your company bank account. You should be able to successfully log in.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/operate-bank-in-china/app-setup/digital-certificate-login.png&quot; alt=&quot;login ubank&quot;&gt;&lt;/p&gt;

&lt;p&gt;If not, try to consult your bank representative who handles your case. Check the password.&lt;br&gt;
But by all means, when you open UBank with prior UKey plugged in, it should populate username text for you &amp;lt;-- this is the major indicator whether it&amp;#39;s &lt;font color=&quot;green&quot;&gt;success&lt;/font&gt; or &lt;font color=&quot;red&quot;&gt;fail&lt;/font&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;transfer-money&quot;&gt;Transfer Money&lt;/h2&gt;

&lt;p&gt;You&amp;#39;ve checked that things work fine up until now. So you&amp;#39;re ready to login as initiator (per se; financial manager) to request money transfer as will be approved or rejected by (per se) general manager of the company later.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s clear by now that why the bank gave you 2 UKeys. One for whoever needs to initiate the transaction, and another for whom to review and decide the fate of that transaction.&lt;/p&gt;

&lt;p&gt;At the back of UKey, you can see long number. You use this number to uniquely identify which one is for whom in your company.&lt;/p&gt;

&lt;p&gt;Now we will act as initiator who will request money transfer. Assume that you already logged in.
You should see the following screen right after that.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&quot;/assets/images/operate-bank-in-china/initiator/ubank-interface-1.png&quot;&gt;&lt;img src=&quot;/assets/images/operate-bank-in-china/initiator/bank-interface-1.png&quot; alt=&quot;home screen ubank&quot;&gt;&lt;/a&gt;
&lt;/center&gt;
&lt;sub&gt;Image is resized. Click for full resolution.&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;Then click on the following section as marked by circle&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/images/operate-bank-in-china/initiator/ubank-operate-2.png&quot;&gt;&lt;img src=&quot;/assets/images/operate-bank-in-china/initiator/ubank-operate-2.png&quot; alt=&quot;initiator transfer money ubank&quot;&gt;&lt;/a&gt;
&lt;div&gt;&lt;sub&gt;Image is resized. Click for full resolution.&lt;/sub&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Actually you can do either single payment, or batch payment. In this case, we go with single payment. Then you will see&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&quot;/assets/images/operate-bank-in-china/initiator/ubank-operate-3.png&quot;&gt;&lt;img src=&quot;/assets/images/operate-bank-in-china/initiator/ubank-operate-3.png&quot; alt=&quot;ubank single payment&quot;&gt;&lt;/a&gt;
&lt;/center&gt;
&lt;sub&gt;Image is resized. Click for full resolution.&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;You will be asked to enter target bank account number, name of beneficiary, province, city, and which bank. Also with &lt;em&gt;Settling mode&lt;/em&gt; which can be either &lt;em&gt;normal&lt;/em&gt; or &lt;em&gt;fast&lt;/em&gt;, and &lt;em&gt;Purpose&lt;/em&gt; in which you can write your own. I used &lt;em&gt;normal&lt;/em&gt; and because the target bank is in the same city, so it&amp;#39;s fast within 5 minutes, we got SMS notification back.&lt;/p&gt;

&lt;p&gt;Also your financial manager, usually the first person mapping with first UKey will get SMS notification about the current activity of the company bank account. If the money is outbound, then SMS will be sent to you indicating -xxx RMB is deducted from company bank account. Something like that.&lt;/p&gt;

&lt;p&gt;When all required information is entered, the request is sent, and it&amp;#39;s done for initiating person at the moment.&lt;/p&gt;

&lt;p&gt;In addition, you can inquire about the current transaction that is waiting to be approved via &lt;em&gt;Payment Settlement-&amp;gt;Payment-Settlement-&amp;gt;Inquire&lt;/em&gt;, you will see the screen similar to below.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&quot;/assets/images/operate-bank-in-china/initiator/ubank-operate-3-waiting.png&quot;&gt;&lt;img src=&quot;/assets/images/operate-bank-in-china/initiator/ubank-operate-3-waiting.png&quot; alt=&quot;ubank single payment - done&quot;&gt;&lt;/a&gt;
&lt;/center&gt;
&lt;sub&gt;Image is resized. Click for full resolution.&lt;/sub&gt;&lt;/p&gt;

&lt;h2 id=&quot;approval&quot;&gt;Approval&lt;/h2&gt;

&lt;p&gt;Let&amp;#39;s shift to another personnel to approve such transaction made by initiator.&lt;/p&gt;

&lt;p&gt;We do the same. Unplug any UKey if there&amp;#39;s any first, then plug another one. Launch UBank again if not yet, then log in.&lt;/p&gt;

&lt;p&gt;Go to &lt;em&gt;Approve&lt;/em&gt; section as marked by circle in the following image.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&quot;/assets/images/operate-bank-in-china/approval/ubank-operate-4-toapprove.png&quot;&gt;&lt;img src=&quot;/assets/images/operate-bank-in-china/approval/ubank-operate-4-toapprove.png&quot; alt=&quot;ubank transfer to be approved&quot;&gt;&lt;/a&gt;
&lt;div&gt;&lt;sub&gt;Image is resized. Click for full resolution.&lt;/sub&gt;&lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You will notice that UI is different from the first person (initiator). There&amp;#39;s no payment section to make any financial request. Only approve or enquiry for whole picture in general. But this person holds decision-making ability.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You will see the following screen.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&quot;/assets/images/operate-bank-in-china/approval/ubank-operate-4-approve.png&quot;&gt;&lt;img src=&quot;/assets/images/operate-bank-in-china/approval/ubank-operate-4-approve.png&quot; alt=&quot;ubank transfer to be approved&quot;&gt;&lt;/a&gt;
&lt;/center&gt;
&lt;sub&gt;Image is resized. Click for full resolution.&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;You can review information before clicking on &lt;em&gt;Agree&lt;/em&gt; to approve it.&lt;br&gt;
Result dialog will be shown.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&quot;/assets/images/operate-bank-in-china/approval/ubank-approve.png&quot;&gt;&lt;img src=&quot;/assets/images/operate-bank-in-china/approval/ubank-approve.png&quot; alt=&quot;ubank transfer approved&quot;&gt;&lt;/a&gt;
&lt;/center&gt;
&lt;sub&gt;Image is resized. Click for full resolution.&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;With a plus that you can print it if you need to, if you set up PDF via printer you would be able to save it as PDF file as well.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&quot;/assets/images/operate-bank-in-china/approval/printing-result.png&quot;&gt;&lt;img src=&quot;/assets/images/operate-bank-in-china/approval/printing-result.png&quot; alt=&quot;printing result&quot;&gt;&lt;/a&gt;
&lt;div&gt;&lt;sub&gt;Image is resized. Click for full resolution.&lt;/sub&gt;&lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Now the full loop starting from initiator requesting money transfer, til approval process is complete.&lt;/p&gt;

&lt;h1 id=&quot;how-to-transfer-money-from-personal-bank-account-to-company-bank-account&quot;&gt;How to Transfer Money From Personal Bank Account to Company Bank Account&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;This is deadly simple. Not to mention that you can just widthdraw money from your personal bank account, then take it to nearby ATM and use company debit card to deposit such money to your company account.&lt;/p&gt;

&lt;p&gt;Unfortunately I only see the ability to directly enter target bank account number to transfer money to on Alipay only, not yet on WeChat.&lt;br&gt;
So on Alipay, go to &lt;em&gt;Home-&amp;gt;Transfer&lt;/em&gt; then you will see the following screen.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&quot;/assets/images/operate-bank-in-china/personal-transfer/personal-transfer-alipay-1.png&quot;&gt;&lt;img alt=&quot;personal transfer&quot; src=&quot;/assets/images/operate-bank-in-china/personal-transfer/personal-transfer-alipay-1.png&quot; width=&quot;40%&quot;/&gt;&lt;/a&gt;
&lt;div&gt;&lt;sub&gt;Image is resized. Click for full resolution.&lt;/sub&gt;&lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Select &lt;em&gt;To Bank Card&lt;/em&gt; then you will have option to enter bank account number.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&quot;/assets/images/operate-bank-in-china/personal-transfer/personal-transfer-alipay-2.png&quot;&gt;&lt;img alt=&quot;personal transfer&quot; src=&quot;/assets/images/operate-bank-in-china/personal-transfer/personal-transfer-alipay-2.png&quot; width=&quot;40%&quot;/&gt;&lt;/a&gt;
&lt;div&gt;&lt;sub&gt;Image is resized. Click for full resolution.&lt;/sub&gt;&lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&quot;cant-we-have-the-same-flexibility-in-receiving-paying-money-on-company-account-as-personal-account&quot;&gt;Can&amp;#39;t We Have the Same Flexibility in Receiving/Paying Money on Company Account as Personal Account?&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;The answer is yes.&lt;/p&gt;

&lt;p&gt;But it comes to some qualification.&lt;/p&gt;

&lt;p&gt;Apply for it&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;WeChat - &lt;a href=&quot;https://pay.weixin.qq.com/index.php/public/wechatpay/home&quot;&gt;WeChat Pay+ Official Account&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Alipay - &lt;a href=&quot;https://global.alipay.com/&quot;&gt;Alipay for Business&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I need to tell you beforehand that I didn&amp;#39;t have such account for company yet. I tried once with Alipay, and their qualification is super high. You have to have very high capital and have the right type of business (mostly retail) to be able to apply. I didn&amp;#39;t try for WeChat yet.&lt;/p&gt;

&lt;p&gt;But it&amp;#39;d be ok for my case as I can freely transfer in/out of money through company/personal account. It&amp;#39;s all me and my partner&amp;#39; asset. So I don&amp;#39;t have immediate urgency to re-apply and get this. But if you have a storefront, selling physical stuff i.e. outlets, fanchises or 7-eleven-like, your urgency is high and a must need. Imagine having just QRCode on either on your side allowing customers to scan to pay, or having it on client side then you scan to complete the purchase, that&amp;#39;s flexible. There&amp;#39;re several options for such payment integration as seen on &lt;a href=&quot;https://pay.weixin.qq.com/wechatpay_guide/help_docs.shtml&quot;&gt;WeChat Pay Documents&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So consult WeChat, Alipay, or accountant to double check on things you need to know further.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;I&amp;#39;m slightly surprise to know that a leading major bank didn&amp;#39;t decide to go all-in to online approach to do financial transaction on your company behalf. But I now well realize that with this, it increases much more security. It introduces a few more hops to go through, not just one but two as you can see from UKey-steps to initiate and approve.&lt;/p&gt;

&lt;p&gt;At the same time, it allows high flexibility of payment for company on mobile and storefronts but with a reasonable price of high requirements.&lt;/p&gt;

&lt;p&gt;I hope you enjoy content I present to you in this article as much as I enjoy writing it.&lt;/p&gt;

&lt;p&gt;If you have any thought you want to discuss, or any suggestion, feel free to comment down below.&lt;br&gt;
Until next time.&lt;/p&gt;
</description>
        <pubDate>Thu, 31 Aug 2017 01:48:00 +0800</pubDate>
        <link>http://blog.wasin.io/blog/2017/08/31/operate-company-banking-in-china-base-on-china-merchants-bank.html</link>
        <guid isPermaLink="true">http://blog.wasin.io/blog/2017/08/31/operate-company-banking-in-china-base-on-china-merchants-bank.html</guid>
        
        <category>banking</category>
        
        <category>china</category>
        
        <category>company</category>
        
        <category>finance</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Use Proxychains to Dynamically Link Your Proxy Setup</title>
        <description>&lt;p&gt;Recently I migrated my server to be within mainland. Immediately since then I faced with another complicated situation of making an Internet request to outside world.&lt;/p&gt;

&lt;p&gt;Normally if your server is outside of China mainland, you don&amp;#39;t have to worry about making an Internet request on behalf of the server to certain sites that are blocked by Chinese government. No. It&amp;#39;s not even the case to worry because you&amp;#39;re outside of mainland. But now if you moved inside, the need to get information from within and outside will lead to more complicated situation.&lt;/p&gt;

&lt;p&gt;Imagine a project needs to pull down node packages via &lt;code&gt;npm install&lt;/code&gt; and you make a request from mainland. Your request would be blocked. In order to successfully do it, you have to configure &lt;code&gt;/.npmrc&lt;/code&gt; to include proxy server, or use &lt;code&gt;npm config set proxy http://yourproxy.com:1234&lt;/code&gt; and &lt;code&gt;npm config set https-proxy http://yourproxy.com:1234&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;That&amp;#39;s still fine as almost all of the time, you will make npm request through a proxy. So globally set that things up is ok.&lt;/p&gt;

&lt;p&gt;But now imagine the case of making a &lt;code&gt;curl&lt;/code&gt; request. You can configure proxy setup via &lt;code&gt;~/.curlrc&lt;/code&gt; then you will be fine.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I also wrote about how to configure &lt;code&gt;~./npmrc&lt;/code&gt; and &lt;code&gt;~./curlrc&lt;/code&gt; &lt;a href=&quot;http://blog.wasin.io/blog/2017/03/14/setup-and-verify-applications-and-terminal-commands-to-work-reliably-with-proxy-on-macos-and-linux.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But do you need to go through proxy all the time? I don&amp;#39;t think so. You don&amp;#39;t want to waste more time in waiting for such response in un-optimized request path as you know you will be fine although making a &lt;strong&gt;direct&lt;/strong&gt; request. So setting proxy setup through those configuration file is a no go.&lt;/p&gt;

&lt;h1 id=&quot;whats-the-better-option&quot;&gt;What&amp;#39;s The Better Option?&lt;/h1&gt;

&lt;p&gt;I discover &lt;a href=&quot;https://github.com/rofl0r/proxychains-ng&quot;&gt;proxychains&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What it can do is to dynamically forward through your request to target proxy server as you configured in its config file; usually at &lt;code&gt;/etc/proxychains.conf&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You just need to add &lt;code&gt;socks5      127.0.0.1 1234&lt;/code&gt; at the end of the file; but substitute for your proxy ip address and port there.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;proxychains will forward TCP connection through SOCKS4, SOCKS5, or HTTP proxy. This perfectly works with Shadowsocks proxy as well.&lt;/p&gt;

&lt;p&gt;I found an interesting case that for a few applications, it is required to use with only HTTP protocol only; not SOCKS. Thus using proxychains to forward that request to your local SOCKS5 proxy (i.e. Shadowsocks) works and solves this issue immediately.&lt;/p&gt;

&lt;p&gt;Also proxychains solves the problem of a need to have a global configuration that affect entire system either via ...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;~/.bash_profile&lt;/code&gt; or &lt;code&gt;~/.bashrc&lt;/code&gt; for &lt;code&gt;HTTP_PROXY=...&lt;/code&gt; and &lt;code&gt;HTTPS_PROXY=...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Applications&amp;#39; configuration file i.e. &lt;code&gt;~/.npmrc&lt;/code&gt;, &lt;code&gt;~/.curlrc&lt;/code&gt;, etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;because whenever you need to go through proxy, you don&amp;#39;t have to set up any proxy configuration. You just execute it like this (assume you make a request from within mainland)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;proxychains4 curl -L https://google.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The following is a result you get&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;proxychains] config file found: /etc/proxychains.conf
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;proxychains] preloading /usr/lib/libproxychains4.so
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;proxychains] DLL init: proxychains-ng 4.12-git-1-gbb3df1e
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;proxychains] Strict chain  ...  127.0.0.1:1234  ...  google.com:443  ...  OK
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;proxychains] Strict chain  ...  127.0.0.1:1234  ...  www.google.com.sg:443  ...  OK
&amp;lt;!doctype html&amp;gt;&amp;lt;html &lt;span class=&quot;nv&quot;&gt;itemscope&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;itemtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://schema.org/WebPage&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;zh-HK&quot;&lt;/span&gt;&amp;gt;&amp;lt;hea
...
&amp;lt;omitted html content &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;brevity here&amp;gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Above result, I modified the port and google URL as to not reveal proxy information I use. But it works.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;So in conclusion proxychains makes it cleanly to make a request without a need to configure system&amp;#39;s proxy setup that will affect the entire system or entire operation of such application. It allows you to go through the proxy as configured in &lt;code&gt;/etc/proxychains.conf&lt;/code&gt; on-demand only when need via a simple command &lt;code&gt;proxychains4 &amp;lt;command&amp;gt; [parameter]&lt;/code&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 16 Aug 2017 10:11:00 +0800</pubDate>
        <link>http://blog.wasin.io/blog/2017/08/16/use-proxychains-to-dynamically-link-your-proxy-setup.html</link>
        <guid isPermaLink="true">http://blog.wasin.io/blog/2017/08/16/use-proxychains-to-dynamically-link-your-proxy-setup.html</guid>
        
        <category>network</category>
        
        <category>proxy</category>
        
        <category>proxychain</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Monthly Report - July 2017</title>
        <description>&lt;p&gt;Here comes July report.&lt;/p&gt;

&lt;p&gt;I slightly changed to present projects-hour spent in bar chart instead of pie chart as before for this report (and likely to continue for next one). It&amp;#39;s clearer to present in this way if there are lots of projects to show.&lt;/p&gt;

&lt;h1 id=&quot;total-hours-spent&quot;&gt;Total hours spent&lt;/h1&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&quot;/assets/images/monthly-report/july-2017/big-picture-hours-spent.png&quot; alt=&quot;big picture hours spent&quot;&gt;&lt;/center&gt;
&lt;center&gt;&lt;img src=&quot;/assets/images/monthly-report/july-2017/projects-hours-spent.png&quot; alt=&quot;projects hours spent&quot;&gt;&lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&quot;summary&quot;&gt;Summary&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;Most of the time in this month has been spent on &lt;em&gt;asteroids&lt;/em&gt; project both in terms of research and programming. I&amp;#39;ve done releasing open source version of it, but continued to adding features I want for commercial one in which hopefully soon that I can release to the wild.&lt;/p&gt;

&lt;p&gt;Also spent a few hours to contribute for &lt;a href=&quot;https://github.com/libgdx/libgdx&quot;&gt;libgdx&lt;/a&gt;, and &lt;a href=&quot;https://github.com/haxpor/potatso&quot;&gt;Potatso&lt;/a&gt;. More story to tell for the latter one. Also I open source &lt;a href=&quot;https://github.com/haxpor/aseprite-macos-buildsh&quot;&gt;aseprite-macos-buildsh&lt;/a&gt; which is an automated tool to help building &lt;a href=&quot;https://www.aseprite.org/&quot;&gt;aseprite&lt;/a&gt; on macOS.&lt;/p&gt;

&lt;p&gt;Also few hours spent on fixing and configuring my servers to be ready for deploying company website (&lt;a href=&quot;https://abzi.co&quot;&gt;https://abzi.co&lt;/a&gt;), but you will see only &amp;quot;Underconstruction&amp;quot; for now.&lt;/p&gt;

&lt;h2 id=&quot;asteroids&quot;&gt;asteroids&lt;/h2&gt;

&lt;hr&gt;

&lt;p&gt;It is initially a port project from ForeignGuyMike, then I added bunch of new improvements, and support over control scheme seamlessly for PC and mobile platform, better error and resource management handling, and featured ful Kotlin language switched with more utilization of lambda functions.&lt;/p&gt;

&lt;p&gt;You can take a look at the project &lt;a href=&quot;https://github.com/haxpor/asteroids&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;mobile-control-support-via-touchpad&quot;&gt;Mobile control support via Touchpad&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&quot;https://media.giphy.com/media/54r3o7nmXqhXi/giphy.gif&quot; alt=&quot;iOS gameplay gif&quot;&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;h3 id=&quot;controller-support-for-desktop&quot;&gt;Controller support for Desktop&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&quot;http://i.imgur.com/O2sSXq1.gif&quot; alt=&quot;controller support&quot;&gt;
&lt;img src=&quot;http://i.imgur.com/of6n3Cx.gif&quot; alt=&quot;high score controller interaction&quot;&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;After porting effort is complete, I want to monetize it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Thus I diverge from it and in the progress of adding multiplayer mode (could I call it PvP?). This is a turning point for streaks I&amp;#39;ve done on github. Since then, I switched to use &lt;a href=&quot;https://gitlab.com/&quot;&gt;gitlab&lt;/a&gt; for private repository. As much as I want to keep being on Github ecosystem, but private repository needs you to pay premium for $7/month. So it&amp;#39;s no go for me during this time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Back to the game. Major feature I&amp;#39;m building right now is multiplayer mode.&lt;br&gt;
Allowing player to play with each other in the death match is definitely cool. So I try. Below is the result I got so far.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&quot;https://media.giphy.com/media/z1eKUFwVf7IC4/giphy.gif&quot; alt=&quot;asteroids multiplayer&quot;&gt;
&lt;img src=&quot;https://media.giphy.com/media/9zgvQCHfBzc76/giphy.gif&quot; alt=&quot;asteroids server log&quot;&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Behind that hours accumulated done in research for networking model and approach I should be doing with the following aims&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Resource consumption needed on server should be as minimum as much as possible (thus peer-to-peer via relay server on UDP protocol is an answer)&lt;/li&gt;
&lt;li&gt;Up for the game in real-time pace (TCP is no no, only option is UDP)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Server is implemented in NodeJS with no extra libraries in used, the same goes for client in pure Java code as of now. The result you see in the gifs above is smooth and good due to the fact that client sends only commands to server, server will relay them to another player. This goes for 2 ways for both players. Sending command-updates to server is at 30 times per second (or 30 packets per second). Client simulates the game smoothly at 60 fps.&lt;/p&gt;

&lt;p&gt;It uses minimal bandwidth in which the game like Starcraft, and Supreme Commander also use this technique&lt;sub&gt;&lt;a href=&quot;https://gafferongames.com/post/what_every_programmer_needs_to_know_about_game_networking/&quot;&gt;Ref&lt;/a&gt;&lt;/sub&gt;. Anyway, i&amp;#39;m not done yet as what I need more is &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Reliable + Ordered UDP messaging&lt;/p&gt;

&lt;p&gt;TCP offers this capability, but using TCP is no option due to lagging in time wait when packet dropped, it needs to wait double of the RTT (Round-trip-time) or 2*RTT. Input packets sent are critical that it needs to make sure it makes its way to another client. Sometimes UDP packets also arrive out of order. Implement such feature to ensure reliability and orderness on top of UDP protocol is a way to go and I found it very hard to implement, although there&amp;#39;s a great &lt;a href=&quot;https://gafferongames.com/post/reliable_ordered_messages/&quot;&gt;resource outlining what to do in concept&lt;/a&gt;, or &lt;a href=&quot;https://github.com/networkprotocol/reliable.io&quot;&gt;code to look at&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ensure deterministic&lt;/p&gt;

&lt;p&gt;As client simulates the game on their own, each input sent from another side needs to produce the same result on both end even no matter which platform the game is played on. As research, this problem related to Floating-point calculation error, thus to solve that we need &lt;a href=&quot;https://gafferongames.com/post/floating_point_determinism/&quot;&gt;Floating-point Determinism&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I expect that I cannot control the same set of compiler, OS, and deterministic nature of every library I used, thus I saw that I definitely need to try making floating-point calculation to produce same result with no error even tiny on all platforms the game runs on. This means in Java term either using &lt;code&gt;BigDecimal&lt;/code&gt; or using technique of fixed-point calcultion to round it to decimal part.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As a side note, &lt;a href=&quot;https://github.com/facebookarchive/RakNet&quot;&gt;Raknet&lt;/a&gt; has such features of reliability and ordered of UDP message as per requirement and it&amp;#39;s open source (although 3 years with no updates). And for Java implementation, I discovered &lt;a href=&quot;https://github.com/JRakNet/JRakNet&quot;&gt;jRakNet&lt;/a&gt; which might be worth to take a look.&lt;/p&gt;

&lt;p&gt;If you&amp;#39;re interested in networking in games, I recommend to read all articles written by Glenn Fiedler listed &lt;a href=&quot;https://gafferongames.com&quot;&gt;here&lt;/a&gt;, but better to start with this &lt;a href=&quot;https://gafferongames.com/post/what_every_programmer_needs_to_know_about_game_networking/&quot;&gt;article&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For the time being, I will push effort and try solutions I&amp;#39;ve found.&lt;/p&gt;

&lt;h2 id=&quot;omo&quot;&gt;OMO&lt;/h2&gt;

&lt;hr&gt;

&lt;p&gt;Early this month, I also released OMO as you can see its gifs in action from previous &lt;a href=&quot;http://blog.wasin.io/monthly-report/2017/06/report.html&quot;&gt;report&lt;/a&gt;. I added background music with knowledge gained from learning milkytracker.&lt;/p&gt;

&lt;iframe style=&quot;border: 0; width: 100%; height: 42px;&quot; src=&quot;https://bandcamp.com/EmbeddedPlayer/track=3650161744/size=small/bgcol=ffffff/linkcol=0687f5/transparent=true/&quot; seamless&gt;&lt;a href=&quot;http://haxpor.bandcamp.com/track/8-bit-concerto&quot;&gt;8-bit Concerto by haxpor&lt;/a&gt;&lt;/iframe&gt;

&lt;p&gt;It&amp;#39;s short but sweet.&lt;/p&gt;

&lt;p&gt;If you didn&amp;#39;t check out OMO yet, I open source it &lt;a href=&quot;https://github.com/haxpor/omo&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;aseprite-macos-buildsh&quot;&gt;aseprite-macos-buildsh&lt;/h2&gt;

&lt;hr&gt;

&lt;p&gt;I use aseprite, and really feel in love with it. When there&amp;#39;s a new features introduced in new build version, it would take some times for you to manually build it yourself. Thus I create an automated build tool just in case you need to build it to get those new features ready; on-demand.&lt;/p&gt;

&lt;p&gt;It will help you with everything from fetching source code til packaging into an app bundle ready to be double click and use.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s tested and aimed to be used on macOS, but I guess you can modify it to cover your platform as need by taking a look at its official &lt;a href=&quot;https://github.com/aseprite/aseprite/blob/master/INSTALL.md&quot;&gt;build manual&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can check this project out on &lt;a href=&quot;https://github.com/haxpor/aseprite-macos-buildsh&quot;&gt;Github&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;opensource-contribution&quot;&gt;Opensource Contribution&lt;/h2&gt;

&lt;hr&gt;

&lt;p&gt;I contributed to libgdx to make it fully 100% Kotlin + fixed a bug of building on iOS-MOE. It&amp;#39;s this &lt;a href=&quot;https://github.com/libgdx/libgdx/pull/4812&quot;&gt;PR&lt;/a&gt; but unfortunately didn&amp;#39;t get merged yet as of this writing.&lt;/p&gt;

&lt;p&gt;Also for &lt;a href=&quot;https://github.com/haxpor/potatso&quot;&gt;Potatso&lt;/a&gt; in which I&amp;#39;ve started porting to Swift3 around 8 months ago, now passed 200 stars and 200 forks, and still counting. Also during this time, due to Chinese government intensely engages in regulating of un-approved VPN services or software, I experienced a spike of people giving star, and forking. I saw this &lt;a href=&quot;https://github.com/haxpor/potatso&quot;&gt;tweet&lt;/a&gt; from original developer of the project. Apple asked him to take the app down. Not only that, but major VPN service providers like Express also affected. I understand that Apple has to obey law in each country the app would be sold. But it seems like it only happens against China as major news reported. It&amp;#39;s getting serious and &lt;a href=&quot;https://techcrunch.com/2017/07/10/china-vpn-ban/&quot;&gt;by February 2018&lt;/a&gt;, government plans to completely block and take down all of VPN service.&lt;/p&gt;

&lt;p&gt;Anyway ..., late in this month, I got this from someone who uses Potatso.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&quot;/assets/images/monthly-report/july-2017/donation-potatso.jpg&quot; alt=&quot;donation potatso&quot;&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;That&amp;#39;s right. It&amp;#39;s 2 RMB donation from someone benefits from using Potatso. Thank you to you again!&lt;br&gt;
Safe to say it&amp;#39;s the first Chinese Yuan money I made here after switched to fully focus on my own projects. Hooraayyy!&lt;/p&gt;

&lt;h2 id=&quot;wechat-mini-program&quot;&gt;WeChat Mini-Program&lt;/h2&gt;

&lt;hr&gt;

&lt;p&gt;I played around with it with objective to test its API. I didn&amp;#39;t spent much time yet as I decided to focus on asteroids project first.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/monthly-report/july-2017/wechat-miniprogram.png&quot; alt=&quot;debugging wechat miniprogram&quot;&gt;&lt;/p&gt;

&lt;p&gt;As far as I can tell from testing, you cannot use jQuery. For other stuff to convert, transpile your code, you have to route and set it up yourself. Also, API is in Chinese, be prepare to always use Google Translator Chrome Plugin for full page translation.&lt;/p&gt;

&lt;p&gt;QR Scanning ecosystem also applies here from setting up process through development process. Account owner permits linked developer account either for logging in, configuring something regarding to the app, etc via QR Scanning. I recommend to check this &lt;a href=&quot;https://medium.com/@yelin.qiu/a-complete-manual-on-wechat-mini-program-development-8fd28a85ee0d&quot;&gt;article&lt;/a&gt; out too.&lt;/p&gt;

&lt;p&gt;Its IDE is powerful enough that it makes me feel the old day of using Visual Studio. Its intellisense is fast in popping up to show you code hint. Result shows and can be refresh right away after code changed. Pretty much as it relies on Chrome Debugging Tool for developer.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/monthly-report/july-2017/ide-code-intellisense.png&quot; alt=&quot;code hint&quot;&gt;&lt;/p&gt;

&lt;p&gt;The preview feature is powerful as you click the button on IDE, scan QR code to preview it on your mobile phone right away. That debug version will stay there in Mini Program section on WeChat application in case you need to take a look again. So time needed in testing in real device is minimal, and still in WeChat ecosystem.&lt;/p&gt;

&lt;h2 id=&quot;company-serv-and-personal-serv&quot;&gt;company-serv, and personal-serv&lt;/h2&gt;

&lt;hr&gt;

&lt;p&gt;I switched to use nginx for my company server now. It feels much more cleaner, and shorter to edit config file. I try to avoid relying on any western service out there as much as possible. This is with objective to be able to serve users within mainland without a worry that the site will be partial, or even worse blocked and they cannot access. I went far to configure DNS server served within the same instance. Configured namecheap.com to point directly to such server. But it&amp;#39;s pretty hard to quickly force update your domain towards root server (from what I did), it takes too long. So I ended up using it as a backup and use one of another of my server to have those DNS records (via service provider&amp;#39;s convenient web interface) then point it to that server instead.&lt;/p&gt;

&lt;p&gt;Again surely I have an option to just use Alibaba cloud or VPS solution, but its pricing scheme seems to be expensive after a year later. And the way to work with such solution, I&amp;#39;m totally not familar and it&amp;#39;s un-tapped way for me for now. I might be wrong but yeah I want to try pushing out a first service out there which served on company server which is in Hong Kong first, then see further from there.&lt;/p&gt;

&lt;p&gt;A tip I found about configuring &lt;a href=&quot;https://certbot.eff.org/&quot;&gt;certbot&lt;/a&gt; to automatically renew certificates on Ubuntu sever is via using webroot, properly use parameters of &lt;code&gt;certbot&lt;/code&gt;, and correctly setup crontab.&lt;/p&gt;

&lt;p&gt;First execute this command to obtain and let system (let&amp;#39;s encrypt) knows what domain/sub-domain you have so that it will operate on that later in consecutive times&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;certbot certonly --webroot --webroot-path=/var/www/your-path/html -d yourdomain.com -d sub.yourdomain.com -d sub2.yourdomain.com --webroot-path=/var/www/your-path2/html -d sub3.yourdomain.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use &lt;code&gt;--webroot-path&lt;/code&gt; to update certificate for webserver without restart the instance of it. The first three domains/sub-domain will be served at &lt;code&gt;/var/www/your-path/html&lt;/code&gt;. The last one will be served at &lt;code&gt;/var/www/your-path2/html&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then you should have this line in your crontab (freely modify how frequently it should update).&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;15 3 * * * /usr/bin/certbot renew --quiet --renew-hook &quot;/usr/sbin/service nginx reload&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Consult &lt;a href=&quot;http://man7.org/linux/man-pages/man5/crontab.5.html&quot;&gt;man page&lt;/a&gt; for parameters.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;That&amp;#39;s it for this month report. I hope you enjoy my sharing for everything possible things I touched in the past month!&lt;/p&gt;

&lt;p&gt;If you have a chance to check out any project above, feel free to let me know what you think. I love feedback, and discussion, hit them up via comment section down below.&lt;/p&gt;

&lt;p&gt;Now, let me go right back to continue &lt;em&gt;asteroids&lt;/em&gt; project.&lt;/p&gt;

&lt;p&gt;Happy creating folks!&lt;/p&gt;
</description>
        <pubDate>Tue, 01 Aug 2017 02:16:00 +0800</pubDate>
        <link>http://blog.wasin.io/monthly-report/2017/07/report.html</link>
        <guid isPermaLink="true">http://blog.wasin.io/monthly-report/2017/07/report.html</guid>
        
        <category>monthly-report</category>
        
        
        <category>monthly-report</category>
        
      </item>
    
      <item>
        <title>Monthly Report - June 2017</title>
        <description>&lt;p&gt;Here comes a report for June with new categorized charts for better understanding hours I&amp;#39;ve invested in. This month packs with activities and couple of released projects.&lt;/p&gt;

&lt;h1 id=&quot;total-hours-spent&quot;&gt;Total hours spent&lt;/h1&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&quot;/assets/images/monthly-report/june-2017/big-picture-hours-spent.png&quot; alt=&quot;big picture hours spent&quot;&gt;&lt;/center&gt;
&lt;center&gt;&lt;img src=&quot;/assets/images/monthly-report/june-2017/projects-hours-spent.png&quot; alt=&quot;projects hours spent&quot;&gt;&lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&quot;summary&quot;&gt;Summary&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;This month packs with quite activities and releasing of a couple of projects. There are lots of tasks I can categorize. This makes me shift the way creating hours-spent chart in this report. You will see &lt;em&gt;Big picture&lt;/em&gt;, and &lt;em&gt;Projects&lt;/em&gt; charts.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Big picture&lt;/em&gt; mainly contains the following things&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;programming - all about technical implementation in code&lt;/li&gt;
&lt;li&gt;visual - all about drawing, coloring, making logos, and anything that involve artistic stuff&lt;/li&gt;
&lt;li&gt;music&lt;/li&gt;
&lt;li&gt;research&lt;/li&gt;
&lt;li&gt;writing - mainly about when I write a new blog post&lt;/li&gt;
&lt;li&gt;misc - other stuff that cannot be categorized above&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Above list is mandatory, and somewhat fixed that I tend not to change in the future. I got inspiration to base off categorizing like that from &lt;a href=&quot;https://twitter.com/neauoire&quot;&gt;Devine&lt;/a&gt;. Classify each task like what I did previously is easier when there&amp;#39;re not too many tasks, but when there&amp;#39;s many, I really have a hard time and it requires me too much time to think about it.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Projects&lt;/em&gt; will now better categorized into one bigger project/task, and not spread for too many, it should be easier to grasp. It will be better over time.&lt;/p&gt;

&lt;h2 id=&quot;block-bunny&quot;&gt;Block Bunny&lt;/h2&gt;

&lt;p&gt;Previous &lt;a href=&quot;http://blog.wasin.io/monthly-report/2017/05/report.html&quot;&gt;May report&lt;/a&gt; did mention about &lt;a href=&quot;https://github.com/haxpor/blockbunny&quot;&gt;blockbunny&lt;/a&gt; project. I released it in early of June.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&quot;http://i.imgur.com/05P8lh8.gif&quot; alt=&quot;Blockbunny in action 1&quot;&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&quot;http://i.imgur.com/k98jwnl.gif&quot; alt=&quot;Blockbunny in action 2&quot;&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&quot;http://i.imgur.com/tJYqnam.gif&quot; alt=&quot;Blockbunny with controller&quot;&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;If you didn&amp;#39;t check it out yet, I open sourced it on &lt;a href=&quot;https://github.com/haxpor/blockbunny&quot;&gt;Github&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;ciga-game-jam-2017-race-plant&quot;&gt;CIGA Game Jam 2017 - Race Plant&lt;/h2&gt;

&lt;p&gt;I participated in CIGA Game Jam 2017 with other fellows Chinese game developers here in Shenzhen as well. It&amp;#39;s the first time of game jam activity here in China I participated.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/BM4e4UB.png&quot; alt=&quot;Race Plant&quot;&gt;&lt;/p&gt;

&lt;p&gt;I made Race Plant solo in 48 hours. The process involves me to quickly fasten the process in learning how to make pixel art. It helped a lot! To be honest, this is the first major time I really make art myself. I&amp;#39;m quite satisfied with the result I got.&lt;/p&gt;

&lt;p&gt;The strategy I approached is to find reference both in color pallete, and end result you want to achieve from Twitter, or Internet. Then at first try to make your own as good as that reference. But if it&amp;#39;s not it&amp;#39;s ok because you got a good reference point to quickly start off.&lt;/p&gt;

&lt;p&gt;This process makes me diss GIMP and completely do pixel art in Aseprite from now on. It&amp;#39;s great software, and you should check it out.&lt;/p&gt;

&lt;p&gt;Also I published Race Plant on &lt;a href=&quot;https://haxpor.itch.io/race-plant&quot;&gt;itch.io&lt;/a&gt; with pay as you want model. I open sourced the project with respective license with limit in some ways on &lt;a href=&quot;https://github.com/haxpor/raceplant&quot;&gt;Github&lt;/a&gt; too with donation model in compensate that you might learn something from the project.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/3W4gL9X_Zks&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;At last, check its &lt;a href=&quot;http://blog.wasin.io/blog/2017/06/19/postmortem-raceplant-ciga-game-jam-2017.html&quot;&gt;postmortem&lt;/a&gt; post out if you didn&amp;#39;t.&lt;/p&gt;

&lt;h2 id=&quot;omo&quot;&gt;OMO&lt;/h2&gt;

&lt;p&gt;OMO is a puzzle game originally by ForeignGuyMike in which it&amp;#39;s a great learning resource thus I went through on top to make changes and add improvements. You can check the project out on &lt;a href=&quot;https://github.com/haxpor/omo&quot;&gt;Github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ohh but not just changes and improvement, I noted key notes regarding to libgdx and kotlin that the project makes use too. Check it out on the link above.&lt;/p&gt;

&lt;p&gt;Yup, you can see what changed and improved on link above. Feel free to do anything with the project, but be aware that ForeignGuyMike already published this original idea on Google Play thus you just cannot copy the code and reskin or slightly modify then publish. Do the real work, adapt, change to not make it completely rip-off, then you will have a chance to publish.&lt;/p&gt;

&lt;p&gt;Main notable change is smooth and flexible drag-touch to select and deselect tiles.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&quot;http://i.imgur.com/9lj8Wo4.gif&quot; alt=&quot;OMO gif 1&quot;&gt;&lt;/center&gt;
&lt;center&gt;&lt;em&gt;Saved high scores has been added to the project&lt;/em&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&quot;http://i.imgur.com/6BKekag.gif&quot; alt=&quot;OMO gif 2&quot;&gt;&lt;/center&gt;
&lt;center&gt;&lt;em&gt;Smooth and flexible drag-touch to select and deselect tiles&lt;/em&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;It&amp;#39;s technically done, just left with music and sfx in which I decided to learn how to make chiptune music first before call it complete.&lt;/p&gt;

&lt;h2 id=&quot;server&quot;&gt;Server&lt;/h2&gt;

&lt;p&gt;I did take some times to create a notifier which is based on NodeJS to send alert message to slack group whenever certain process died on server. I&amp;#39;m tired to know it long after HTTP process died, and I cannot access my website. Thus this notifier will bombard the message until you see and fix the problem :P&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Bot game on point. Prepare to set up alerter when certain critical process crashed silently, then alert me. What if  alerter crashes 2?👨🏽‍💻 &lt;a href=&quot;https://t.co/6eymFeBLLl&quot;&gt;pic.twitter.com/6eymFeBLLl&lt;/a&gt;&lt;/p&gt;&amp;mdash; Wasin Thonkaew (@haxpor) &lt;a href=&quot;https://twitter.com/haxpor/status/873454744718659584&quot;&gt;June 10, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Here is the series of screen captures of what it looks like&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&quot;/assets/images/monthly-report/june-2017/notifier-slack-1.jpg&quot; width=&quot;60%&quot; alt=&quot;server notifier slack 1&quot;&gt;&lt;/center&gt;
&lt;center&gt;&lt;em&gt;Notifications sent to your mobile phone&lt;/em&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&quot;/assets/images/monthly-report/june-2017/notifier-slack-2.jpg&quot; width=&quot;60%&quot; alt=&quot;server notifier slack 2&quot;&gt;&lt;/center&gt;
&lt;center&gt;&lt;em&gt;Alert messages received on slack channel&lt;/em&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&quot;/assets/images/monthly-report/june-2017/notifier-slack-3.jpg&quot; alt=&quot;server notifier slack 3&quot;&gt;&lt;/center&gt;
&lt;center&gt;&lt;em&gt;Same to above but with modified message format&lt;/em&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&quot;/assets/images/monthly-report/june-2017/notifier-slack-4.jpg&quot; alt=&quot;server notifier slack 4&quot;&gt;&lt;/center&gt;
&lt;center&gt;&lt;em&gt;Logs as shown while running no server&lt;/em&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;All in all, just check it out on &lt;a href=&quot;https://github.com/haxpor/sg-server-notifier&quot;&gt;Github&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;techcrunch-shenzhen-2017&quot;&gt;Techcrunch Shenzhen 2017&lt;/h2&gt;

&lt;p&gt;I attended &lt;a href=&quot;http://tc.technode.com/2017/en/main-stage/?from=timeline&amp;isappinstalled=0#1495077026084-21a4b319-af3b&quot;&gt;Techcrunch Shenzhen 2017 event&lt;/a&gt; and captured what &lt;a href=&quot;https://twitter.com/edithyeung&quot;&gt;Edith Yeung&lt;/a&gt; said during panel along the line of difference of doing business between Eastern and Western that the former tends to quickly form partnership, and collaborate but latter tend to check the legitimate &amp;amp; background for another party before forming a thing. That&amp;#39;s exactly what I&amp;#39;ve felt personally too even though not only in highly business sense.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&quot;http://i.imgur.com/fxIHVaFl.jpg&quot; alt=&quot;Techcrunch badge&quot;&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;This leads me to think about game dev ecosystem here in China especially Shenzhen (I think it applies to all area in China). Chinese game development ecosystem is very friendly and supportive. Everyone would like to help each other out. I think this trait is very natural in Chinese way of doing business as well. People here tend to collaborate, eager to seek to find partnership and my sense tells me that it&amp;#39;d be easy to close the deal if both side agrees.&lt;/p&gt;

&lt;p&gt;I suggest you to sign up or attend events hosted by &lt;a href=&quot;https://hax.co/&quot;&gt;HAX&lt;/a&gt; too in you&amp;#39;re into hardware stuff and especially if you base in Shenzhen. They will get freebies like free tickets to event i.e. Techcrunch, funding your hardware-based startup, meetups, etc.&lt;/p&gt;

&lt;h2 id=&quot;visa-work-permit-and-residential-permit&quot;&gt;VISA, Work Permit, and Residential Permit&lt;/h2&gt;

&lt;p&gt;Pheww! Early of June, I&amp;#39;ve done all of these and acquired all of them. Quite a long haul process spanning into 5-6 months included the time from registering a business license, going back to my own country (Thailand) to get all legal required documents, prepare all documents, commute to government places to handle stuff with help from agency etc. I don&amp;#39;t think I will have time to pay attention to all the detail, so it&amp;#39;s better to have agency takes care of stuff and you just do your best to help them from your side. If you want help regarding these, I can refer you to my trust agency to take care these stuff for you, just message me on &lt;a href=&quot;https://twitter.com/haxpor&quot;&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But that&amp;#39;s not all yet.....???&lt;/p&gt;

&lt;p&gt;As of now, I&amp;#39;m in the process of waiting for bank confirmation to complete the process of acquiring company bank account. It&amp;#39;s almost there I think after waiting for a month, that&amp;#39;s a usual time for waiting anyway. So all process to get company license, VISA, work permit, residential permit, and bank account might take ~6 months to complete. If you plan the time carefully, it might be shorter too.&lt;/p&gt;

&lt;h2 id=&quot;chiptune-music&quot;&gt;Chiptune Music&lt;/h2&gt;

&lt;p&gt;Ohh, I love this part. As stated from OMO, I decided to firstly learn how to make chiptune music first before calling a day for that project.
I&amp;#39;m in the process of doing that right now, and so far so good.&lt;/p&gt;

&lt;p&gt;Right now I&amp;#39;m mainly using &lt;a href=&quot;http://milkytracker.titandemo.org/&quot;&gt;MiklyTracker&lt;/a&gt;. I will update on this skill development later in next month.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;That&amp;#39;s it for this month report.&lt;/p&gt;

&lt;p&gt;If you have a chance to check out any project above, feel free to let me know what you think. Or if you have any suggestion, I love discussion and receive feedback, hit them up via comment section down below.&lt;/p&gt;

&lt;p&gt;Happy creating fellows!&lt;/p&gt;
</description>
        <pubDate>Sun, 02 Jul 2017 05:36:00 +0800</pubDate>
        <link>http://blog.wasin.io/monthly-report/2017/06/report.html</link>
        <guid isPermaLink="true">http://blog.wasin.io/monthly-report/2017/06/report.html</guid>
        
        <category>monthly-report</category>
        
        
        <category>monthly-report</category>
        
      </item>
    
      <item>
        <title>Postmortem of Race Plant, CIGA Game Jam 2017</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzIwMjc3NjAyMA==&amp;mid=2247483713&amp;idx=1&amp;sn=6c7794a55c2d6143932750f8b72cc690&amp;chksm=96d8cdfaa1af44ecef8ec43d449d370eb84a351fd697071f49288b9718771531d6880a8dba18&amp;mpshare=1&amp;scene=1&amp;srcid=0620BtwRjY43YtlxXL8yXNOp&amp;key=dd608d91fd702d64460b55d328895106f469470062151b36abe421d3206855bd1fded14c1cfa0d8185e5ace39a268b9ac0bbd5a99c13b4905f08a705263ac23a857c7280af3425527ef217c071ec1e6d&amp;ascene=0&amp;uin=NDI1Njc0NDc4&amp;devicetype=iMac+MacBookPro9%2C2+OSX+OSX+10.13+build(17A264c)&amp;version=12020810&amp;nettype=WIFI&amp;fontScale=100&amp;pass_ticket=wQEH5dThsNTUA4Nl99aTwOKHjwIbL2ZJabEIetOVrkl4fhI6jDnOAYKknfy2AG4y&quot;&gt;CIGA Game Jam 2017&lt;/a&gt; during 17-18 June 2017 is the first major game jam I participated in China.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&quot;/assets/images/raceplant-ciga2017/ciga-logo.png&quot; alt=&quot;CIGA logo main&quot;&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;That is being said to create a game within 48 hours. The theme announced at the event taking place at Huaqiaodong Dream Space, a cafe shop with space for hosting a small or medium size event.&lt;/p&gt;

&lt;p&gt;Organizers posted the theme for participants to think about via image.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&quot;/assets/images/raceplant-ciga2017/theme.jpg&quot; alt=&quot;Theme&quot;&gt;
&lt;/center&gt;
&lt;center&gt;
&lt;em&gt;Image courtesy of &lt;a href=&quot;http://game.people.com.cn/n1/2017/0619/c40130-29347357.html?from=timeline&amp;isappinstalled=0&quot;&gt;people.com&lt;/a&gt;&lt;/em&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;So in this post, I will go through my development process. How I organized and split the chunk of time to do each task, and be able to come up with a game that has essential features I aimed for from start.&lt;/p&gt;

&lt;p&gt;But before we go through all of those detail, the following is what the game looks like.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&quot;/assets/images/raceplant-ciga2017/screenshot.jpg&quot;&gt;&lt;img src=&quot;/assets/images/raceplant-ciga2017/screenshot.jpg&quot; alt=&quot;raceplant screenshot&quot;&gt;&lt;/a&gt;
&lt;/center&gt;
&lt;center&gt;&lt;br/&gt;
&lt;em&gt;Click on image for full resolution&lt;/em&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/3W4gL9X_Zks&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/center&gt;
&lt;center&gt;
&lt;em&gt;Watch til the match ends, you will know the reason of all actions in the game.&lt;/em&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&quot;schedule-the-time&quot;&gt;Schedule the Time&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;I knew myself I will face a hard time trying to implement certain feature if it requires some effort, or spend time too much on certain thing without bound, thus I need to mark the silo of time from beginning.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&quot;/assets/images/raceplant-ciga2017/schedule-time.png&quot; alt=&quot;schedule time&quot;&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;From above, I categorize only main tasks into&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Task&lt;/th&gt;
&lt;th style=&quot;text-align: right&quot;&gt;Alloted Time (hours)&lt;/th&gt;
&lt;th style=&quot;text-align: center&quot;&gt;Schedule&lt;/th&gt;
&lt;th style=&quot;text-align: right&quot;&gt;Percentage&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Ideation&lt;/td&gt;
&lt;td style=&quot;text-align: right&quot;&gt;2.3&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;17 June, 18:00 - 20:00&lt;/td&gt;
&lt;td style=&quot;text-align: right&quot;&gt;5%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Development&lt;/td&gt;
&lt;td style=&quot;text-align: right&quot;&gt;36.8&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;17 June, 20:00 - 18 June, 10:00&lt;/td&gt;
&lt;td style=&quot;text-align: right&quot;&gt;80%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Polish (Sfx, Music, Bugs fix)&lt;/td&gt;
&lt;td style=&quot;text-align: right&quot;&gt;4.6&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;18 June, 10:00 - 13:30&lt;/td&gt;
&lt;td style=&quot;text-align: right&quot;&gt;10%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Misc&lt;/td&gt;
&lt;td style=&quot;text-align: right&quot;&gt;2.3&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;18 June, 13:30 - 16:00&lt;/td&gt;
&lt;td style=&quot;text-align: right&quot;&gt;5%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: right&quot;&gt;46.0&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;17 June, 18:00 - 18 June, 16:00&lt;/td&gt;
&lt;td style=&quot;text-align: right&quot;&gt;100%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;blockquote&gt;
&lt;p&gt;Notice that it&amp;#39;s not entirely 48 hours, as that 2 hours was spent as presentation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;During the entire time, I try to stick to the plan as best as I can to minimize the risk of not enough time that usually happens at the end of overall development cycle; yup, to not miss any particular stuff i.e. sfx, important bug fix of the game.&lt;/p&gt;

&lt;h1 id=&quot;coming-up-with-idea&quot;&gt;Coming up with Idea&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;Look at the theme image, I ever tried to rotate the image to see it from different angle. What it came up to me is the &lt;em&gt;&amp;quot;root&amp;quot;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;So the idea develops into &lt;em&gt;&amp;quot;planting&amp;quot;&lt;/em&gt;, &lt;em&gt;&amp;quot;maintenance&amp;quot;&lt;/em&gt;, and &lt;em&gt;&amp;quot;collecting&amp;quot;&lt;/em&gt;. So why not creating a game that allows two players to compete each other. That involves planting tree, taking care of them by watering, and collecting their benefits (fruit, and seeds). With these, we can repeat the whole process until match&amp;#39;s timeout. Who gets more fruits wins!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Actually both players win as we help to plant tree for the better.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&quot;/assets/images/raceplant-ciga2017/initial-design.jpg&quot; alt=&quot;initial design&quot;&gt;
&lt;/center&gt;
&lt;center&gt;
&lt;em&gt;Initial rough sketch that shows the idea about tree&amp;#39;s planting, and maintenance. Further with divided areas for each player to compete in taking (latter is discarded in iteration).&lt;/em&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&quot;/assets/images/raceplant-ciga2017/initial-design2.jpg&quot; alt=&quot;initial design&quot;&gt;
&lt;/center&gt;
&lt;center&gt;
&lt;em&gt;Initial rough sketch that shows available areas for taking for advantages.&lt;/em&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;The big picture of idea is there, but during having done with iteration of each feature implementation, I found out that few features are rather difficult and has  enough time to develop, or too much involved with graphical assets. So I cut a few ideas out.&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;removed_idea&quot;&gt;&lt;/a&gt;Ideas I removed out during iteration of development&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Attacking opponent with a bow&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This requires a cursor locking system to be implemented. Use another analog stick to aim, and player&amp;#39;s animation needs to be in synced. This &lt;a href=&quot;https://twitter.com/blankthevidya/status/868423578949234689&quot;&gt;idea&lt;/a&gt; or see below I saved as reference inspired me to implement this feature.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;New floaty eye enemies and bow mechanics &lt;a href=&quot;https://twitter.com/hashtag/screenshotsaturday?src=hash&quot;&gt;#screenshotsaturday&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/gamedev?src=hash&quot;&gt;#gamedev&lt;/a&gt; &lt;a href=&quot;https://t.co/kjfW7Bsqpp&quot;&gt;pic.twitter.com/kjfW7Bsqpp&lt;/a&gt;&lt;/p&gt;&amp;mdash; Fervir (@blankthevidya) &lt;a href=&quot;https://twitter.com/blankthevidya/status/868423578949234689&quot;&gt;May 27, 2017&lt;/a&gt;&lt;/blockquote&gt;&lt;/center&gt;
&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Anyway I found this might be too much for the game, thus it&amp;#39;s better to remove it. Then while play-testing latter version of the game, by chance I found that attacking can be interchanged with &lt;em&gt;stealing&lt;/em&gt; mechanics. As player can pick up bucket, seed, and fruit, and also can place them down on the ground if they want. Thus player can throw it to another player to suddenly make opponent carry that stuff (if such player has empty hand). This is to annoy, and introduce time delay to focus on collecting fruits which are the main score of the game.&lt;/p&gt;

&lt;p&gt;Anyway, from public play-testing by other developers in the event, some suggested that it&amp;#39;d be good to be able to attack another player in some ways. They want to do it in the game.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Large area of water tiles&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Water tileset is one of variety in tileset I initially aimed for to have from the beginning of design. During mid phase of development, I found out that it would take more time to have a realistic look of water tileset after play-testing it. So I changed this to have only a single tile to represent water allowing player to fill water into a bucket.&lt;/p&gt;

&lt;p&gt;This &lt;a href=&quot;https://twitter.com/amzeratul/status/874971284395970560&quot;&gt;idea&lt;/a&gt; or you can see below, and also shallow water you see above inspired me and thus I saved them as reference to pursue this vision although cut them out and changed to single tile at the end.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Make sure to check out our post on how the campaign editor of Wargroove will work! &lt;a href=&quot;https://t.co/EdaRN3M2qv&quot;&gt;&lt;a href=&quot;https://t.co/EdaRN3M2qv&quot;&gt;https://t.co/EdaRN3M2qv&lt;/a&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/indiedev?src=hash&quot;&gt;#indiedev&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/gamedev?src=hash&quot;&gt;#gamedev&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/pixelart?src=hash&quot;&gt;#pixelart&lt;/a&gt; &lt;a href=&quot;https://t.co/ao4S4uZEBz&quot;&gt;pic.twitter.com/ao4S4uZEBz&lt;/a&gt;&lt;/p&gt;&amp;mdash; Rodrigo Monteiro (@amzeratul) &lt;a href=&quot;https://twitter.com/amzeratul/status/874971284395970560&quot;&gt;June 14, 2017&lt;/a&gt;&lt;/blockquote&gt;&lt;/center&gt;
&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Factory to Generate Seeds &amp;amp; Fruits&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.myabandonware.com/game/z-2uk&quot;&gt;Z&lt;/a&gt; is old DOS game that comes to my mind. That game has entire map divided into areas. Each area might have a factory to produce something useful for player to use it as advantage to compete with oppononent.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&quot;http://www.myabandonware.com/media/screenshots/z/z-2uk/z_10.gif&quot; alt=&quot;Z screenshot factory&quot;&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Latter in the development cycle, it requires careful judement on balancing, and art creation. Thus I cut it out, and let the tree which players grow to produce such seeds and fruits for endless score until match&amp;#39;s time is up.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;development&quot;&gt;Development&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;The tools I use are as follows&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://libgdx.badlogicgames.com/&quot;&gt;libgdx&lt;/a&gt; with &lt;a href=&quot;https://kotlinlang.org/&quot;&gt;kotlin&lt;/a&gt; as programming language&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.android.com/studio/index.html&quot;&gt;Android Studio 2.3.3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.aseprite.org/&quot;&gt;Aseprite&lt;/a&gt; - for pixel art and animation&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.mapeditor.org/&quot;&gt;tiled&lt;/a&gt; - for tile-based map editor&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.bfxr.net/&quot;&gt;Bfxr&lt;/a&gt; - for sound effect (background music, and some of sfx I downloaded them from Internet)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;As you can see, I prefer to use only open source tools.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Requirement to Run the Game&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Java Runtime at least version 1.6+&lt;/li&gt;
&lt;li&gt;Xbox360 controllers for two players (due to the game doesn&amp;#39;t offer button mapping as configuration so if you use different brand of controller, button might be changed. But all in all, you can use other controller but keep in mind it&amp;#39;s not tested).&lt;/li&gt;
&lt;li&gt;&lt;font color=&quot;red&quot; style=&quot;font-weight: bold&quot;&gt;-&lt;/font&gt; Keyboard to control player is not support yet.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following is a working desk I&amp;#39;ve occupied to work on the game. It&amp;#39;s nearly perfect suitable for standing desk.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&quot;/assets/images/raceplant-ciga2017/working-table.png&quot; alt=&quot;working table&quot;&gt;
&lt;/center&gt;
&lt;center&gt;
&lt;em&gt;Near perfect suitable for standing desk. First ~24 hours, I&amp;#39;ve standed and worked on the game.&lt;/em&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Right after ideation, I quickly started the development process in which I knew deep down in my mind that I&amp;#39;m not a fast coder who can implement something very quickly compared to others as I have noticed this from past experience.&lt;/p&gt;

&lt;p&gt;So I stick to the plan, and start coding early. I noticed that I&amp;#39;ve started coding way earlier than most other participants. While I&amp;#39;m coding, other teams still discussing about the idea; even the next day in the morning, discussion was still going strong but that time I went through already down in development.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m not saying working as a team is wrong. But just my taste and this particular of time that I prefer working alone.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Don&amp;#39;t get me wrong, I work with others as a team before, many times. Either student, game jam, or commercial projects.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Thing is working in a team, time will be spent in politics which is cost in communication of discussion. You cannot go fast in short term. But if things settle down, things will be faster in long term. Compare that to single or solo developer, you can go in any direction you want, I mean right away. No discussion or approvement, short term is very good, but long term beware of burning out due to you need time to sleep. That gap of time &amp;quot;a team&amp;quot; can still operate.&lt;/p&gt;

&lt;p&gt;This game jam is a challenge for me to produce art resource by myself. I&amp;#39;m not artist by nature, thus artistic vision is not yet there. So in order to fasten the process, I did much of the research and tried to find lots of artistic reference out there before deciding especially which color palletes and style to go before drawing.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&quot;/assets/images/raceplant-ciga2017/dev-player.jpg&quot; alt=&quot;drawing player&quot;&gt;
&lt;/center&gt;
&lt;center&gt;
&lt;em&gt;Initial player sprite&lt;/em&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Mostly for animation for certain action, I aim for 3-4 frames no more than that.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&quot;/assets/images/raceplant-ciga2017/dev-tileset-stockpile.jpg&quot; alt=&quot;tileset&quot;&gt;
&lt;/center&gt;
&lt;center&gt;
&lt;em&gt;Stockpile tileset&lt;/em&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&quot;/assets/images/raceplant-ciga2017/dev-coding.jpg&quot; alt=&quot;coding&quot;&gt;
&lt;/center&gt;
&lt;center&gt;
&lt;em&gt;Player 1 is carrying fruit while Player 2 is idle. Trees are grew into final state.&lt;/em&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&quot;/assets/images/raceplant-ciga2017/dev-bucket.jpg&quot; alt=&quot;bucket sheet&quot;&gt;
&lt;/center&gt;
&lt;center&gt;
&lt;em&gt;Bucket sheet&lt;/em&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&quot;/assets/images/raceplant-ciga2017/dev-player-sheet-sheet-annotated.png&quot; alt=&quot;bucket sheet&quot;&gt;
&lt;/center&gt;
&lt;center&gt;
&lt;em&gt;Player sheet&lt;/em&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;I counted my hours spent and below is what I found&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;38 hours of development&lt;/li&gt;
&lt;li&gt;6 hours of sleep&lt;/li&gt;
&lt;li&gt;2 hours of relaxing i.e. watching random Youtube videos, chill, etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first ~24 hours is non-stop working. I&amp;#39;ve stayed overnight at the cafe then get back home in the evening of next day to sleep and relax before continue the work at home overnight until coming back at the venue for presentation.&lt;/p&gt;

&lt;p&gt;There&amp;#39;s no strict rule that you need to be at the venue all the time.&lt;/p&gt;

&lt;h1 id=&quot;what-went-right-wrong&quot;&gt;What Went Right &amp;amp; Wrong&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;things-went-right&quot;&gt;Things Went Right&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Cut out Time-consuming Features During Iteration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;See &lt;a href=&quot;#removed_idea&quot;&gt;ideas that were removed during iteration&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Focus on Pixel Art Style&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yes, I&amp;#39;m not an arist by nature thus by focusing on pixel art style which is the possible way that I can achieve with my ability.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Start Actual Coding as Early as Possible (according to scheduled time)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So with this I have more time to breathe and fix important bugs especially z-order sorting, tile&amp;#39;s line bleeding, and camera bounding.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;things-went-wrong&quot;&gt;Things Went Wrong&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Not Immediately Start with Actual Game Session in 5 Minutes Presentation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;That said, 5 minutes is too short. I instead started with introduction talking in which that time should be well spent else where. The game is more suitable to be presented right away with live demo. Also for solo developer that has worked long hour, speak less to minize risk of doing something wrong and just show the end product is better. So my presentation is not good. This is an important lesson learned.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;gifs-in-action&quot;&gt;Gifs in Action&lt;/h1&gt;

&lt;hr&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Giving Thing to Opponent&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Player can give a stuff which can be bucket, seed, or fruit to other player.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&quot;http://i.imgur.com/xzJ5hZc.gif&quot; alt=&quot;gif - give thing to opponent&quot;&gt;
&lt;/center&gt;
&lt;center&gt;
&lt;em&gt;Giving thing to opponent&lt;/em&gt;
&lt;/center&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Growth of Tree&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tree has 3 step to grow. Only the final step in which it can generate seed and fruit.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&quot;http://i.imgur.com/PkYArMl.gif&quot; alt=&quot;gif - tree grow to step 2&quot;&gt;
&lt;img src=&quot;http://i.imgur.com/jeayq4f.gif&quot; alt=&quot;gif - tree grow to step 3&quot;&gt;
&lt;/center&gt;
&lt;center&gt;
&lt;em&gt;&lt;b&gt;Left&lt;/b&gt;: Tree grows into step 2&lt;/em&gt;&lt;br/&gt;
&lt;em&gt;&lt;b&gt;Right&lt;/b&gt;: Tree grows into step 3&lt;/em&gt;
&lt;/center&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Generation of Fruit and Seed&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fruit will be treated as a score whenever player takes it back to stockpile tiles. Seed can be used to further grow another tree as well.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&quot;http://i.imgur.com/WlWMbIA.gif&quot; alt=&quot;gif - generation of fruit and seed&quot;&gt;
&lt;/center&gt;
&lt;center&gt;
&lt;em&gt;Fruit and seed generated from a tree&lt;/em&gt;
&lt;/center&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Collect the Fruit for Score!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fruit is a main target for player to collect for score.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&quot;http://i.imgur.com/B7c8J2G.gif&quot; alt=&quot;gif - collect fruit for score&quot;&gt;
&lt;/center&gt;
&lt;center&gt;
&lt;em&gt;Collect a fruit back to stockpile for a score&lt;/em&gt;
&lt;/center&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Fill Water in a Bucket&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bucket can be either empty or full. In order to water the tree, player needs to fill a bucket first. Find a nearby water tile to fill it.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&quot;http://i.imgur.com/6EfdAfb.gif&quot; alt=&quot;gif - fill water in a bucket&quot;&gt;
&lt;/center&gt;
&lt;center&gt;
&lt;em&gt;Fill a bucket with water from a nearby water tile&lt;/em&gt;
&lt;/center&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Watering the Plant&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Take bucket with water filled to water the tree to accelerate its growth.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&quot;http://i.imgur.com/Tu3Uggv.gif&quot; alt=&quot;gif - watering the plant&quot;&gt;
&lt;/center&gt;
&lt;center&gt;
&lt;em&gt;Water a tree to accelerate its grow&lt;/em&gt;
&lt;/center&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Z-Order Sorting&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is one of major thing I&amp;#39;m fortunate enough to have time to fix it. It can go horribly wrong if this thing didn&amp;#39;t get fixed before showing the game to public.&lt;/p&gt;

&lt;p&gt;As not every object has the same size as tile dimension, take for example a tree which has very long height compared to player&amp;#39;s dimension. If not sort in drawing order properly, then player might be drew in front of the tree at the situation that player should be drew behind. It&amp;#39;s good that the game fixed this.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It turns out that the fix is easy. Use the height of object, then subtract it with desire size of object i.e. player. Use y position as z position in 2D game, then sort all object according to that value, draw object with bigger value of y first. Do this every frame.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&quot;http://i.imgur.com/oFEOLwy.gif&quot; alt=&quot;gif - z-order sorting&quot;&gt;
&lt;/center&gt;
&lt;center&gt;
&lt;em&gt;Z-order sorting&lt;/em&gt;
&lt;/center&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;aftermaths&quot;&gt;Aftermaths&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;I feel satisfied with producitivity and result I can produce at the end. All essential features I aim for from beginning get implemented, and it&amp;#39;s a good feeling that when you play the game with another player, it&amp;#39;s fun.&lt;/p&gt;

&lt;p&gt;The game got covered as seen in Chinese media &lt;a href=&quot;http://www.vgtime.com/topic/651845.jhtml?preview=true&amp;from=timeline&amp;isappinstalled=0&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Although the game didn&amp;#39;t manage to be in top 3 popular vote, but that&amp;#39;s totally fine as it&amp;#39;s not my objective. Other fellow developers seem to be very interested and had fun when they play the game. That&amp;#39;s a mission accomplished.&lt;/p&gt;

&lt;p&gt;Great thing is to see people smile and laugh while playing your game.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&quot;/assets/images/raceplant-ciga2017/public-play.jpg&quot; alt=&quot;public play&quot;&gt;
&lt;/center&gt;
&lt;center&gt;
&lt;em&gt;Thanks to Kim from 手游龙虎豹 gaming media in China for photo&lt;/em&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&quot;/assets/images/raceplant-ciga2017/audience.jpg&quot; alt=&quot;audience&quot;&gt;
&lt;/center&gt;
&lt;center&gt;
&lt;em&gt;Didn&amp;#39;t remember the source, please contact me if you took it.&lt;/em&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&quot;/assets/images/raceplant-ciga2017/wasin-presenting.jpg&quot; alt=&quot;presenting&quot;&gt;
&lt;/center&gt;
&lt;center&gt;
&lt;em&gt;Thanks to KoooN from DJI for taking this photo.&lt;/em&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;At last, I open sourced the project too if you&amp;#39;re interested to know more (note the license of the project).&lt;br&gt;
Head to &lt;a href=&quot;https://github.com/haxpor/raceplant&quot;&gt;raceplant&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;=&amp;gt;&lt;/strong&gt; Download the game &lt;a href=&quot;http://wanga.me/CGJ2017/detail?game=147&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All in all, feel free to let me know what you think about the game below in comment section.&lt;/p&gt;

&lt;p&gt;Happy making game folks!&lt;/p&gt;

&lt;p&gt;...
...&lt;/p&gt;

&lt;h1 id=&quot;many-thanks&quot;&gt;Many Thanks&lt;/h1&gt;

&lt;hr&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Phoebe&lt;/strong&gt; - for organizing and facilitate presentation as I need to play the game at the same time of presenting&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Kim&lt;/strong&gt; - help translate rules and announcement from stage from the start, also misc stuff&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;KoooN&lt;/strong&gt; - introduce me to Phobe and this event, and also professional photo. Without you, I might not have a chance to create this game.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fellow developers&lt;/strong&gt; - for very friendly, warm welcome, and support throughout the time of event even after. You guys make game development scene here very warm welcoming! Also not to mention about all advice, and suggestion. Thanks for communicate with me!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Xiuyi&lt;/strong&gt; - thanks for coming by hn, take photo, do social sharing to spread the word, help me communicate in Chinese and demo the game in front of other developers. I&amp;#39;m a single handed thus this helps a lot.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 19 Jun 2017 22:46:00 +0800</pubDate>
        <link>http://blog.wasin.io/blog/2017/06/19/postmortem-raceplant-ciga-game-jam-2017.html</link>
        <guid isPermaLink="true">http://blog.wasin.io/blog/2017/06/19/postmortem-raceplant-ciga-game-jam-2017.html</guid>
        
        <category>game</category>
        
        <category>indiegame</category>
        
        <category>indie</category>
        
        <category>gamejam</category>
        
        <category>ciga</category>
        
        <category>cigagamejam</category>
        
        <category>raceplant</category>
        
        <category>tree</category>
        
        <category>solo</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Monthly Report - May 2017</title>
        <description>&lt;h1 id=&quot;first-thing-first&quot;&gt;First Thing First&lt;/h1&gt;

&lt;p&gt;This is a first montly report after I stopped receiving freelance/contract works to focus on my own projects.&lt;/p&gt;

&lt;p&gt;During the time I was doing contract works for tech startup in Bangkok remotely, I used to write a monthly report declaring hours spent for each different type of task I&amp;#39;ve involved. As I charge per hour, information conveyed in report will allow them where their money went, included interesting tidbit of information in both terms of technical and user&amp;#39;s perspective to allow upper level management paving a way for direction and strategy.&lt;/p&gt;

&lt;p&gt;So yes, it&amp;#39;d be great idea to do the similar (not exactly the same) with my own stuff from now on; monthly.&lt;/p&gt;

&lt;h1 id=&quot;monthly-report-post-notice&quot;&gt;Monthly Report Post Notice&lt;/h1&gt;

&lt;p&gt;Before I dwell down to the niffy grifty of report, let&amp;#39;s first see the difference of &amp;#39;monthly report type of post&amp;#39; to normal posts.&lt;/p&gt;

&lt;p&gt;For a new post that is monthly report, you will see the following tag in &lt;a href=&quot;http://blog.wasin.io&quot;&gt;http://blog.wasin.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/monthly-report/may-2017/monthly-report-tag.png&quot; alt=&quot;monthly report tag&quot;&gt;&lt;/p&gt;

&lt;p&gt;Whenever you click it, there&amp;#39;s also another tag at the title as follows.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/monthly-report/may-2017/monthly-report-tag2.png&quot; alt=&quot;monthly report tag&quot;&gt;&lt;/p&gt;

&lt;p&gt;It should make it easily to spot which post is what. Now let&amp;#39;s move on.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 id=&quot;total-hours-spent&quot;&gt;Total hours spent&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;I write May report very late, but in future I aim to write it down immediately at the beginning of new month.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/monthly-report/may-2017/piechart-may-2017.png&quot; alt=&quot;piechart&quot;&gt;&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Task&lt;/th&gt;
&lt;th style=&quot;text-align: center&quot;&gt;Hours&lt;/th&gt;
&lt;th style=&quot;text-align: right&quot;&gt;Percentage&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;blockbunny&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;48.49&lt;/td&gt;
&lt;td style=&quot;text-align: right&quot;&gt;47.83%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;devops&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;7.38&lt;/td&gt;
&lt;td style=&quot;text-align: right&quot;&gt;7.28%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;networking-china&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;1.85&lt;/td&gt;
&lt;td style=&quot;text-align: right&quot;&gt;1.82%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;libgdx-misc&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;4.14&lt;/td&gt;
&lt;td style=&quot;text-align: right&quot;&gt;4.08%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;twitterbot&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;9.93&lt;/td&gt;
&lt;td style=&quot;text-align: right&quot;&gt;9.79%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gamedev-research&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;16.18&lt;/td&gt;
&lt;td style=&quot;text-align: right&quot;&gt;15.96%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gamearch-research&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;2.25&lt;/td&gt;
&lt;td style=&quot;text-align: right&quot;&gt;2.22%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tools-research&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;4.77&lt;/td&gt;
&lt;td style=&quot;text-align: right&quot;&gt;4.71%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pixelart-study&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;6.27&lt;/td&gt;
&lt;td style=&quot;text-align: right&quot;&gt;6.18%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;art-research&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;0.12&lt;/td&gt;
&lt;td style=&quot;text-align: right&quot;&gt;0.12%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;101.38&lt;/td&gt;
&lt;td style=&quot;text-align: right&quot;&gt;100%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;h1 id=&quot;summary&quot;&gt;Summary&lt;/h1&gt;

&lt;p&gt;This month, I spent pretty much of the time learning &lt;a href=&quot;https://github.com/libgdx/libgdx&quot;&gt;libgdx&lt;/a&gt; which I chose it to be the main technology for game development in upcoming projects. I learn best at following tutorial, making changes and improvements. To make myself being familar with the tools at hands.&lt;/p&gt;

&lt;p&gt;Multiple times, I try to base the project around Unity as I used it from time to time in supporting during contract work, and it&amp;#39;s stable with future-proof. But man... I tried. At least, 2 major times to sit down, use it, and convincing myself to &lt;strong&gt;happily&lt;/strong&gt; use it. Result is NO. I&amp;#39;m not quite happy developing game with this tool. So I go on with what I&amp;#39;m happy with although it might not increase productivity, or have super convenient tool-chain.&lt;/p&gt;

&lt;p&gt;So here the summary for interesting tasks I&amp;#39;ve done in this month.&lt;/p&gt;

&lt;h2 id=&quot;blockbunny&quot;&gt;blockbunny&lt;/h2&gt;

&lt;p&gt;I open source this project &lt;a href=&quot;https://github.com/haxpor/blockbunny&quot;&gt;here&lt;/a&gt;. By early June, the project has been completed, and received a few traction of talking about it in libgdx, and kotlin community. I will fully post about the screenshots, gifs, and other things about the project at the end of next month. At which it&amp;#39;s the point in time that I should write about it, not now as I wrote this report very late.&lt;/p&gt;

&lt;p&gt;blockbunny is a studying material for me to being familar with libgdx. It&amp;#39;s great, and I can code it with kotlin which is another programming language that I like a lot extremely similar and comparable to how flexible and consise language it can be to swift. Sadly, there&amp;#39;s no stable and production ready game engine/framework to use with swift.&lt;/p&gt;

&lt;p&gt;Note that BlockBunny is originally from ForeignGuyMike, I followed along with idea, coded it in kotlin with changes + improvements.&lt;/p&gt;

&lt;h2 id=&quot;devops&quot;&gt;devops&lt;/h2&gt;

&lt;p&gt;Also as I live in China. Freedom in Internet has been comproised. This time I decided it&amp;#39;s time to have an equal in quality of proxy server in case the main one doesn&amp;#39;t work as expect. So I spent time upgrading shadowsocks server, &lt;a href=&quot;http://blog.wasin.io/blog/2017/05/08/how-tcp-bbr-could-help-speed-up-internet.html&quot;&gt;upgrading linux kernel&lt;/a&gt; to make it support TCP-BBR for secondary proxy server, and misc.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m happy that now I have 2 options to choose from which has equal in Internet speed and quality. The main difference between the twos are distance. One in Singapore, and another in Hong Kong. You definitely know which one is closer to my location. Thus secondary is slightly slower.&lt;/p&gt;

&lt;h2 id=&quot;networking-china&quot;&gt;networking-china&lt;/h2&gt;

&lt;p&gt;I first try to up the Internet speed via &lt;a href=&quot;http://blog.wasin.io/blog/2017/05/08/how-tcp-bbr-could-help-speed-up-internet.html&quot;&gt;TCP-BBR&lt;/a&gt;. It works great.&lt;/p&gt;

&lt;p&gt;Next try is &lt;a href=&quot;https://github.com/xtaci/kcptun&quot;&gt;kcptun&lt;/a&gt;. Works great again. It works well with shadowsocks. You can watch youtube video very fast (in highest quality, 1080p) without waiting for buffering. If you want to configure your shadowsocks server with kcptun, the highest chance is mistakes in setting port, password, and ip. Follow along with this &lt;a href=&quot;https://nathaniel.blog/tutorials/shadowsocks/&quot;&gt;article&lt;/a&gt;. It&amp;#39;s the only one that is working for me out there.&lt;/p&gt;

&lt;h2 id=&quot;twitterbot&quot;&gt;twitterbot&lt;/h2&gt;

&lt;p&gt;During the ideation phase to think about game idea for my game, I created a twitter bot to retweet my tweet as a purpose to archive it as future reference in one place. I understand that these days you have Pinterest, Pocket, or other service to help you out. But because I&amp;#39;m almost always on Twitter, I don&amp;#39;t want to waste time switching apps.&lt;/p&gt;

&lt;p&gt;My &lt;a href=&quot;https://github.com/haxpor/twitterbot_refrt&quot;&gt;bot&lt;/a&gt; is based on NodeJS, it&amp;#39;s minimal right now. Only it does is to check the beginning string of each new tweet of my personal twitter account (&lt;a href=&quot;https://twitter.com/haxpor&quot;&gt;@haxpor&lt;/a&gt;). If it matches &amp;quot;RT |&amp;quot;, then it will retweet it.&lt;/p&gt;

&lt;p&gt;Yup, when I have time I go there to my bot (&lt;a href=&quot;https://twitter.com/haxpor_refrtbot&quot;&gt;@haxpor_refrtbot&lt;/a&gt;) to revisit the idea I found interesting.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;When I tweet with &amp;quot;RT |&amp;quot;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/monthly-report/may-2017/original-tweet.png&quot; alt=&quot;tweet original&quot;&gt;&lt;/p&gt;

&lt;p&gt;The bot will do this&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/monthly-report/may-2017/bot-retweet.png&quot; alt=&quot;tweet original&quot;&gt;&lt;/p&gt;

&lt;p&gt;It turns out for me you can have a bot up and running pretty fast. There&amp;#39;re bunch of options you can do reactively i.e. target account favorited a tweet / updating their bio, etc. This is why there&amp;#39;re so many of spam bots out there. In fact, most high profile people with verified tag often utilize bot in some way to interact with their fans.&lt;/p&gt;

&lt;h2 id=&quot;pixelart-study&quot;&gt;pixelart-study&lt;/h2&gt;

&lt;p&gt;Artist is another path I need to acquire its skill set to be able to feed my game projects with graphical assets. I planned to do it solo.
The following is what I came up with in tileset study.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Tileset Study&lt;a href=&quot;https://twitter.com/hashtag/gimp?src=hash&quot;&gt;#gimp&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/gamedev?src=hash&quot;&gt;#gamedev&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/indiedev?src=hash&quot;&gt;#indiedev&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/pixelart?src=hash&quot;&gt;#pixelart&lt;/a&gt; &lt;a href=&quot;https://t.co/i940QzXksF&quot;&gt;pic.twitter.com/i940QzXksF&lt;/a&gt;&lt;/p&gt;&amp;mdash; Wasin Thonkaew (@haxpor) &lt;a href=&quot;https://twitter.com/haxpor/status/868597281016041472&quot;&gt;May 27, 2017&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;Gimp is my tool of choice.
More time will be spent for artistic studying.&lt;/p&gt;

&lt;h2 id=&quot;art-research&quot;&gt;art-research&lt;/h2&gt;

&lt;p&gt;Dang, I came across the old topic of rotoscoping animation. This is quite old school that it answers why the game like Prince of Persia has natural movement like human. Rotoscoping in-short is a technique for animator to have benefit of line-reference from live video shot of action they want to animate.&lt;/p&gt;

&lt;p&gt;By all means, watch this &lt;a href=&quot;https://www.youtube.com/watch?v=-jvXJs97bPo&quot;&gt;video&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;before-we-go&quot;&gt;Before We Go&lt;/h1&gt;

&lt;p&gt;That&amp;#39;s it for this month report.&lt;br&gt;
Keep an eye for this kind of post again when next month ends.&lt;/p&gt;
</description>
        <pubDate>Sun, 11 Jun 2017 23:13:00 +0800</pubDate>
        <link>http://blog.wasin.io/monthly-report/2017/05/report.html</link>
        <guid isPermaLink="true">http://blog.wasin.io/monthly-report/2017/05/report.html</guid>
        
        <category>monthly-report</category>
        
        
        <category>monthly-report</category>
        
      </item>
    
      <item>
        <title>How TCP-BBR Could Help Speed Up Internet</title>
        <description>&lt;p&gt;I&amp;#39;ve come back to stay in Shenzhen, China since exactly 2 weeks ago.&lt;/p&gt;

&lt;p&gt;Coming this time, Internet quality is pretty much worse than previous time in which I thought it was quite stable after fighting with GFW alot. Now the speed is quite low (lowest point can be &amp;lt; &lt;code&gt;1 Mb/s&lt;/code&gt;), and I cannot watch video online with good enough quality to enjoy the content. If it can be &lt;code&gt;144p&lt;/code&gt; in smooth manner, that&amp;#39;s what the best I could ask for.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s like GFW really knows how to adapt. It learns from analyzing ton of packets flowing within China, and across the border. It learns to cut my SSR connection (prior to this it was still Ok). I need to find a reactive solution to fight back.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I connected through my Shadowsocks server. Long before it was always SSR. Now I&amp;#39;m fully using SS. It&amp;#39;s better strategy to have alternatives or back ups plan for your connection available.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;tcp-bbr&quot;&gt;TCP-BBR&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;I came across to find this terminology by reading &lt;a href=&quot;https://github.com/shadowsocks/shadowsocks-org/issues/26&quot;&gt;discussion&lt;/a&gt; on shadowsocks-org repository on Github. Especially &lt;a href=&quot;https://github.com/shadowsocks/shadowsocks-org/issues/26#issuecomment-269444798&quot;&gt;this&lt;/a&gt;, and &lt;a href=&quot;https://github.com/shadowsocks/shadowsocks-org/issues/26#issuecomment-269456260&quot;&gt;this&lt;/a&gt; comment that shows the result of speed testing using TCP-BBR which is a lot higher.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m so hooked up with that. Thus I further did research on the topic on how to enable such feature on my proxy server.&lt;/p&gt;

&lt;p&gt;Question found in &lt;a href=&quot;https://github.com/shadowsocks/shadowsocks-org/issues/26#issuecomment-269487933&quot;&gt;comment&lt;/a&gt; that whether or not we need to enable it on both end of communication. Answer is no, so it&amp;#39;s great as I&amp;#39;m quite aware that macOS won&amp;#39;t likely to support and really need to catch up in pace. Take example of &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=543653&quot;&gt;Fast TCP Open&lt;/a&gt; feature for Chrome on macOS. It still doesn&amp;#39;t support!&lt;/p&gt;

&lt;h1 id=&quot;what-is-it&quot;&gt;What Is It?&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;Refer to &lt;a href=&quot;https://github.com/google/bbr/blob/master/Documentation/bbr-quick-start.md&quot;&gt;google/bbr&lt;/a&gt; and especially this &lt;a href=&quot;http://git.kernel.org/cgit/linux/kernel/git/davem/net-next.git/commit/?id=0f8782ea14974ce992618b55f0c041ef43ed0b78&quot;&gt;Linux Kernerl - TCP BBR commit&lt;/a&gt;, if you want to dig deep right away for how it works, and algorithm in general.&lt;/p&gt;

&lt;p&gt;In short and human word (in which by no mean I&amp;#39;m an expert on network matter, and I don&amp;#39;t like to act like one), TCP-BBR is another algorithm in TCP congestion control. It improves what has already been there via loss-based congestion control which is predominantly used since 1980s.&lt;/p&gt;

&lt;p&gt;This new scheme is contributed by Google which commited back to Linux kernel for general public to use.&lt;/p&gt;

&lt;p&gt;Refer to these notable excerpts I captured from its commit link.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/tcp-bbr/excerpt1.png&quot; alt=&quot;excerpt tcp-bbr 1&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/tcp-bbr/excerpt2.png&quot; alt=&quot;excerpt tcp-bbr 2&quot;&gt;&lt;/p&gt;

&lt;p&gt;The factor of improvement is magnificent. Although numbers stated above would be as high as ~2kx. From what I got as tested it&amp;#39;s roughly &lt;code&gt;~600x&lt;/code&gt; when pull content from upstream via Github clone command, or &lt;code&gt;~30x&lt;/code&gt; in downstream Internet speed in general. It&amp;#39;s way better than before.&lt;/p&gt;

&lt;h1 id=&quot;how-to-enable-it-on-your-ubuntu-14-01-server&quot;&gt;How to Enable It On Your Ubuntu 14.01 Server?&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;I learned the steps much from this &lt;a href=&quot;https://github.com/iMeiji/shadowsocks_install/wiki/%E5%BC%80%E5%90%AFTCP-BBR%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95&quot;&gt;guide&lt;/a&gt; (in Chinese). So big shoutout to him. Allow me to replicate steps in English with slightly modified here.&lt;/p&gt;

&lt;p&gt;I have Ubuntu &lt;code&gt;14.01&lt;/code&gt; in which this kernel version doesn&amp;#39;t support TCP-BBR just yet. You have to upgrade your kernel.&lt;br&gt;
Kernerl version &lt;code&gt;4.9+&lt;/code&gt; is at least to support.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For other Linux distros rather than Ubuntu, please follow this &lt;a href=&quot;https://github.com/iMeiji/shadowsocks_install/wiki/%E5%BC%80%E5%90%AFTCP-BBR%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95&quot;&gt;guide&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Follows the following steps&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Download the lastest kernel&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can also just head to &lt;a href=&quot;http://kernel.ubuntu.com/%7Ekernel-ppa/mainline/&quot;&gt;http://kernel.ubuntu.com/~kernel-ppa/mainline/&lt;/a&gt; to select latest version by yourself in which case it might be newer after this article published. Download it to your system.  &lt;/p&gt;

&lt;p&gt;Or just execute the following command,  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.10.9/linux-image-4.10.9-041009-generic_4.10.9-041009.201704080516_amd64.deb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Install the kernel&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;dpkg -i linux-image-4.&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.deb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Update grub system, then reboot&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;update-grub
reboot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After your system has rebooted...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Check your kernel version&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;uname -r
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You should get something like &lt;code&gt;4.10.X-XXXXXX-generic&lt;/code&gt;. Make sure it starts with &lt;code&gt;4.9&lt;/code&gt; or &lt;code&gt;4.10&lt;/code&gt;, but if you follow all commands above it should be &lt;code&gt;4.10&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Edit &lt;code&gt;/etc/sysctl.conf&lt;/code&gt; to have following lines&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;net.core.default_qdisc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;fq
net.ipv4.tcp_congestion_control&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;bbr
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will instruct system to use &lt;code&gt;bbr&lt;/code&gt; as congestion control for TCP.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Save to make it effective&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;sysctl -p
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Check to confirm that settings are taken into effect&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;sysctl net.ipv4.tcp_available_congestion_control
sysctl net.ipv4.tcp_congestion_control
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You should see output like &lt;code&gt;net.ipv4.tcp_available_congestion_control = bbr hybla cubic reno&lt;/code&gt;, and
&lt;code&gt;net.ipv4.tcp_congestion_control = bbr&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;and lastly&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;lsmod | grep bbr
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;you should see &lt;code&gt;tcp_bbr&lt;/code&gt; there in output.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;result&quot;&gt;Result&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;Speed gained as tested over &lt;a href=&quot;speedtest.net&quot;&gt;speedtest.net&lt;/a&gt;, or via tool like &lt;a href=&quot;https://pypi.python.org/pypi/speedtest-cli/&quot;&gt;speedtest-cli&lt;/a&gt; might not be tremondous high. I gained speed like &lt;code&gt;10-30x&lt;/code&gt; more, with lower ping (-&lt;code&gt;~20ms&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;But that increased speed plays a key role in consuming online content, in addition to performing Github commands i.e. cloning.&lt;/p&gt;

&lt;p&gt;Result from my Github clone of big project in which normally I can clone it with average speed of around &lt;code&gt;~4KB/s&lt;/code&gt; then sometimes it would stall then connection broken. It only can succeed for small to almost medium size project with good Internet time (not too much traffic). But now I do get the following&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/tcp-bbr/tcp-bbr-more-speed.png&quot; alt=&quot;github clone speed improved&quot;&gt;&lt;/p&gt;

&lt;p&gt;Average speed is good which is &lt;code&gt;2MB/s&lt;/code&gt; and reliable.&lt;/p&gt;

&lt;p&gt;It is not only Github, but also NPM which if you depend and use NodeJS-based packages, you will pull down lots of packages from it from time to time. Loads of files, and some certain package is very large in size. Thus they are much more better and reliable.&lt;/p&gt;

&lt;p&gt;Finally, consuming video content online is much more pleasant without waiting for it to finishes buffering first. 360p quality in video is a norm, but if I need to go high like HD, I can do so too but slightly waiting in initial time might be required depends on traffic at that time. I also can watch live streaming without problem. Anyway, 360p quality is good enough for experience in my case of consuming educational, tutorial, songs kind of video.&lt;/p&gt;

&lt;p&gt;In short, TCP-BBR helps significantly with minimal effort in upgrading your kernel to support it.&lt;br&gt;
As it&amp;#39;s an addition to TCP protocol, it is compatible for all proxy applications you&amp;#39;re using.&lt;/p&gt;

&lt;p&gt;Give TCP-BBR a try. I strongly believe you will experience much better quality of Internet speed.&lt;/p&gt;
</description>
        <pubDate>Mon, 08 May 2017 19:54:00 +0800</pubDate>
        <link>http://blog.wasin.io/blog/2017/05/08/how-tcp-bbr-could-help-speed-up-internet.html</link>
        <guid isPermaLink="true">http://blog.wasin.io/blog/2017/05/08/how-tcp-bbr-could-help-speed-up-internet.html</guid>
        
        <category>tcp</category>
        
        <category>bbr</category>
        
        <category>network</category>
        
        <category>tcp-bbr</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Model &amp; Approach for Private Delivery of iOS Frameworks Using Cocoapods</title>
        <description>&lt;p&gt;Lately, I&amp;#39;ve been thinking about the way to deliver &lt;strong&gt;private&lt;/strong&gt; iOS frameworks to users using &lt;a href=&quot;https://cocoapods.org/&quot;&gt;Cocoapods&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Firstly, don&amp;#39;t get me wrong, I do love open source, I embrace the way of its approach, and even put tagline &lt;em&gt;Open source by default&lt;/em&gt; on my &lt;a href=&quot;https://twitter.com/haxpor&quot;&gt;Twitter profile&lt;/a&gt;. Yup, I do understand that not every situation or entity can go all-in with such approach. There will be certain circumstance that the project needs to be in closed-source forever, or for certain time period until it can be open, or due to as part of the deal that makes open source is not an option.&lt;/p&gt;

&lt;p&gt;Whatever the reason it might be, having Cocoapods as your delivery and dependency management is still a leading choice. I do point it out because if we&amp;#39;re going to deliver frameworks privately through Cocoapod, there&amp;#39;s going to be additional effort.&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s first understand the underlying system of Cocoapods, until we come to overall big picture of model to use it.&lt;/p&gt;

&lt;h2 id=&quot;underlying&quot;&gt;Underlying&lt;/h2&gt;

&lt;hr&gt;

&lt;p&gt;Under the hood, there are 2 main things that work together for Cocoapods.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Specs&lt;/code&gt; repo&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.podspec&lt;/code&gt; files&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;Specs&lt;/code&gt; repo contains multiple &lt;code&gt;.podspec&lt;/code&gt; files. Main &lt;a href=&quot;https://github.com/CocoaPods/Specs&quot;&gt;Spec repo&lt;/a&gt; of Cocoapods is used to serve general public frameworks to users. Your &lt;code&gt;pod install&lt;/code&gt; command will check to see information from this repo, and go down to check &lt;code&gt;.podspec&lt;/code&gt; file for specific version of target framework in order to know URL to pull down framework&amp;#39;s source code then finally integrate it with your Xcode project. See example of &lt;code&gt;.podspec&lt;/code&gt; file &lt;a href=&quot;https://github.com/CocoaPods/Specs/blob/master/Specs/d/a/2/Alamofire/4.4.0/Alamofire.podspec.json&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You notice that Spec repo is public, thus also &lt;code&gt;.podspec&lt;/code&gt; file. Anyone can take a peek, and get relavent information. Now you see the problem that such information can lead to information breached in term of closed-source approach. They might get to know which client you work with, or github URL. With those two information, competitors can imply or even try to download the project source code (if permission is not set properly, yup github project as served on Cocoapods can be set to be private. It&amp;#39;s just a matter how who can access.).&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;steps&quot;&gt;&lt;/a&gt;What we need to do is&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Self-host &lt;code&gt;Specs&lt;/code&gt; repo&lt;/li&gt;
&lt;li&gt;Build framework in universal binary without exposing source code&lt;/li&gt;
&lt;li&gt;Upload result framework to public server for user to grab&lt;/li&gt;
&lt;li&gt;Create a proper &lt;code&gt;.podspec&lt;/code&gt; file and set its &lt;code&gt;source&lt;/code&gt; field to use URL as result from 3.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;self-host-spec-repo&quot;&gt;Self-host Spec repo&lt;/h3&gt;

&lt;p&gt;To gain the benefit of setting the permission of &lt;code&gt;Specs&lt;/code&gt; repo, you have only option which is to do self-host of it.
Even you do self-host, you also have an option of setting access permission to be in public or private. In this case, we&amp;#39;re primarily interested in private access.&lt;/p&gt;

&lt;p&gt;Cocoapods has official document on &lt;a href=&quot;https://guides.cocoapods.org/making/private-cocoapods.html&quot;&gt;how to host private Specs repo&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;build-framework-in-universal-binary-without-exposing-source-code&quot;&gt;Build framework in universal binary without exposing source code&lt;/h3&gt;

&lt;p&gt;I came across this well explained &lt;a href=&quot;https://eladnava.com/publish-a-universal-binary-ios-framework-in-swift-using-cocoapods/&quot;&gt;article&lt;/a&gt; of how to publish a universal binary iOS framework using Cocoapods.&lt;/p&gt;

&lt;p&gt;Only difference from what we&amp;#39;re trying achieving compared to that article is that, the author publishes it publicly. But we want it in private. Thus we have no need to involve using &lt;code&gt;pod trunk ...&lt;/code&gt; command as we don&amp;#39;t publish to the main public &lt;code&gt;Specs&lt;/code&gt; repo but to our private one.&lt;/p&gt;

&lt;h3 id=&quot;upload-result-framework-to-public-server&quot;&gt;Upload result framework to public server&lt;/h3&gt;

&lt;p&gt;Upload such built frameworks to our public server. Ensure that it&amp;#39;s in universal binary form thus it can be used to run on device and simulator. Ensure that you didn&amp;#39;t include any source code with it. Normally, aim for &lt;code&gt;.zip&lt;/code&gt; file. The content of &lt;code&gt;.zip&lt;/code&gt; file mainly contains &lt;code&gt;.framework&lt;/code&gt; along with &lt;code&gt;README&lt;/code&gt; or any relavent files if you need. All of them are at the same level. It might be as follows.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;framework-result.zip
               |_ myFW.framework
               |_ README
               |_ strip-frameworks.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;strip-frameworks.sh&lt;/code&gt; is usually needed at the end when users want to publish the result application to AppStore. It will help stripping un-needed architecture from frameworks being in use. You can see and make use of &lt;a href=&quot;https://github.com/realm/realm-cocoa/blob/master/scripts/strip-frameworks.sh&quot;&gt;strip-frameworks.sh&lt;/a&gt; by Realm. Insert it insidee &lt;em&gt;Build Phases&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;create-a-proper-podspec-file&quot;&gt;Create a proper &lt;code&gt;.podspec&lt;/code&gt; file&lt;/h3&gt;

&lt;p&gt;Properly create a &lt;code&gt;.podspec&lt;/code&gt; file to match the version of such framework. The most important thing is &lt;code&gt;source&lt;/code&gt; field instead of providing github URL, you provide the end-result of URL of &lt;code&gt;.zip&lt;/code&gt; for users to download.&lt;/p&gt;

&lt;h2 id=&quot;model&quot;&gt;Model&lt;/h2&gt;

&lt;hr&gt;

&lt;p&gt;Now it&amp;#39;s time for a big picture to see how everything gets involved.
Please note that I observe the main &lt;code&gt;Specs&lt;/code&gt; repo&amp;#39;s file structure then compare with our private one, there is slightly difference. So I include it here too.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Main &lt;code&gt;Specs&lt;/code&gt; repo&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;Specs
  |_ 0
     |_ 0
         |_ framework-A
                   |_ 1.0.0
                         |_ framework-A.podspec
                   |_ 1.0.1
                         |_ framework-A.podspec
                   |_ 1.1.0
                         |_ framework-A.podspec
         |_ framework-B
                   |_ 1.0.0
                         |_ framework-B.podspec
         |_ 1
            |_ ...
         |_ 2
            |_ ...
    |_ 1
       |_ 0
          |_ ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Our private &lt;code&gt;Specs&lt;/code&gt; repo&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;Specs
   |_ framework-A
       |_ 1.0.0
           |_ framework-A.podspec
       |_ 1.0.1
           |_ framework-A.podspec
       |_ 1.1.0
           |_ framework-A.podspec
   |_ framework-B
       |_ 1.0.0
           |_ framework-B.podspec
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I cloned the project and inspected, the following is what I found.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Each directory holds up to 40 MB&lt;/li&gt;
&lt;li&gt;There are 3 layers of numerical directory for each framework to reside in i.e. &lt;code&gt;Specs/0/0/0/framework-A&lt;/code&gt;, &lt;code&gt;Specs/0/1/0/framework-B&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Each layer of numerical directory consists of directory ranging from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;9&lt;/code&gt;, also &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;f&lt;/code&gt; in total of 16 directories&lt;/li&gt;
&lt;li&gt;(as above for what I&amp;#39;ve found) &lt;code&gt;Specs&lt;/code&gt; repo can hold up to 163.84 GB in total. Right now it&amp;#39;s at 583 MB (0.584 GB) or 0.003%. I suspect this part is to optimize the directory system, not to make each individual directory too large&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I came up with two possible models; Variant A, and B.&lt;/p&gt;

&lt;h3 id=&quot;variant-a&quot;&gt;Variant A&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cocoapods/VariantA.png&quot; alt=&quot;Model Variant A&quot;&gt;&lt;/p&gt;

&lt;h4 id=&quot;annotations&quot;&gt;Annotations&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;1&lt;/strong&gt; ---&amp;gt; Ownership (included just to show authentic owenership)&lt;br&gt;
&lt;strong&gt;2&lt;/strong&gt; ---&amp;gt; Public server to host built (.zip) frameworks&lt;br&gt;
&lt;strong&gt;3&lt;/strong&gt; ---&amp;gt; Each circle is &lt;strong&gt;private&lt;/strong&gt; &lt;code&gt;Specs&lt;/code&gt; repo exposed to selected external party (client)&lt;br&gt;
&lt;strong&gt;4&lt;/strong&gt; ---&amp;gt; Multiple of client parties spanning into multiple groups&lt;/p&gt;

&lt;h4 id=&quot;requirements&quot;&gt;Requirements&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Public server to host built (.zip) frameworks.&lt;/li&gt;
&lt;li&gt;Paid Github acccount to have ability to create private repositories ($7/month)&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;feature&quot;&gt;Feature&lt;/h4&gt;

&lt;p&gt;It allows another layer to control which party (client) can see such &lt;code&gt;Specs&lt;/code&gt; repo.
Imagine if we have 2 clients. Each client might use multiple of frameworks and are different from ones used by another client.&lt;br&gt;
Thus we will have 2 private &lt;code&gt;Specs&lt;/code&gt; repo one for each client.&lt;/p&gt;

&lt;p&gt;We need to allow users (github account) to have read access towards such &lt;code&gt;Specs&lt;/code&gt; repo. So when they pull down via configured &lt;code&gt;Podfile&lt;/code&gt;, it will be fine.&lt;/p&gt;

&lt;h4 id=&quot;summary&quot;&gt;Summary&lt;/h4&gt;

&lt;h5 id=&quot;pros&quot;&gt;Pros&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Additional layer to manage and control which party can have access to which frameworks via private &lt;code&gt;Specs&lt;/code&gt; repo.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;cons&quot;&gt;Cons&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Need to manage and allow access for users towards such &lt;code&gt;Specs&lt;/code&gt; repo&lt;/li&gt;
&lt;li&gt;Might not be feasible for who which doesn&amp;#39;t want to pay monthly in order to use Github&amp;#39;s private repositories feature&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;variant-b&quot;&gt;Variant B&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cocoapods/VariantB.png&quot; alt=&quot;Model Variant B&quot;&gt;&lt;/p&gt;

&lt;h4 id=&quot;annotations&quot;&gt;Annotations&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;1&lt;/strong&gt; ---&amp;gt; Ownership (included just to show authentic owenership)&lt;br&gt;
&lt;strong&gt;2&lt;/strong&gt; ---&amp;gt; Public server to host built (.zip) frameworks&lt;br&gt;
&lt;strong&gt;3&lt;/strong&gt; ---&amp;gt; One single &lt;code&gt;Specs&lt;/code&gt; repo exposed to general public&lt;br&gt;
&lt;strong&gt;4&lt;/strong&gt; ---&amp;gt; Multiple of client parties treated as a single public group&lt;/p&gt;

&lt;h4 id=&quot;requirement&quot;&gt;Requirement&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Public server to host built (.zip) frameworks.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;feature&quot;&gt;Feature&lt;/h4&gt;

&lt;p&gt;It has no control layer over which party or users should have access towards our framework.
Thus there is no need to create private &lt;code&gt;Specs&lt;/code&gt; repo and manage (allow users access) to it.&lt;/p&gt;

&lt;p&gt;One caveat is that if users inspect the content inside &lt;code&gt;Specs&lt;/code&gt; repo, they will have information for all frameworks we have, and might be able to know which client we work with. But it might be less likely for normal users as when they&amp;#39;re done with configuring &lt;code&gt;Podfile&lt;/code&gt;, usually they have no time or interest to study our &lt;code&gt;Specs&lt;/code&gt; repo. Even if they do so, they have to try by trial and error to use the framework as most likely we will deliver document to client privately too.&lt;/p&gt;

&lt;h4 id=&quot;summary&quot;&gt;Summary&lt;/h4&gt;

&lt;h5 id=&quot;pros&quot;&gt;Pros&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;No additional effort to manage each private &lt;code&gt;Specs&lt;/code&gt; repository as there is none to manage.&lt;/li&gt;
&lt;li&gt;No additional cost, normal Github account will do the work&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;cons&quot;&gt;Cons&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Users might gain information about our all frameworks and where to download; and possible to know which client we&amp;#39;ve worked with.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;final-words&quot;&gt;Final words&lt;/h2&gt;

&lt;p&gt;Now we get to know models to use in delivery frameworks to clients privately, and even has options to choose one that is more suitable to use. To go further than that, it&amp;#39;s possible to reduce &lt;a href=&quot;#steps&quot;&gt;steps&lt;/a&gt; needed especially 2, 3, and 4 which are building framework, uploading, and creating a proper &lt;code&gt;.podspec&lt;/code&gt; via automated script.&lt;/p&gt;

&lt;p&gt;Then even more advanced, for build step, we can make it more robust using automated build system (CI). The overall combination should be pleasant and extremely automated.&lt;/p&gt;

&lt;p&gt;I might consider writing about automated build, and how to combine it with models we&amp;#39;ve learned for next articles. For now, we have models and technical background included with steps to accomplish as a foundation to further utilize Cocoapod in delivery and automated flow.&lt;/p&gt;

&lt;p&gt;Until next time...&lt;/p&gt;
</description>
        <pubDate>Sat, 25 Mar 2017 00:03:00 +0800</pubDate>
        <link>http://blog.wasin.io/blog/2017/03/25/model-and-approach-for-private-delivery-of-ios-frameworks-using-cocoapods.html</link>
        <guid isPermaLink="true">http://blog.wasin.io/blog/2017/03/25/model-and-approach-for-private-delivery-of-ios-frameworks-using-cocoapods.html</guid>
        
        <category>cocoapods</category>
        
        <category>pod</category>
        
        <category>private</category>
        
        <category>framework</category>
        
        <category>ios</category>
        
        <category>model</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Set up and Verify Applications and Terminal Commands to Work Reliably with Proxy on macOS and Linux</title>
        <description>&lt;p&gt;If you live behind firewall i.e. &lt;a href=&quot;https://en.wikipedia.org/wiki/Great_Firewall&quot;&gt;GFW&lt;/a&gt; and interact with terminal commands a lot in day-to-day basis and of course surfing Internet, I believe you usually utilize proxy to carry on your request in Internet world.&lt;/p&gt;

&lt;p&gt;Without a doubt, verifying that those applications espcially browser and commands behave as you set and expect it to be is crucial. Wasting hours in waiting for return from &lt;code&gt;npm install&lt;/code&gt; command, or even &lt;code&gt;git clone &amp;lt;project-url&amp;gt;&lt;/code&gt; for project with huge amount of files but not necessary in bigger size without knowing whether it&amp;#39;s going to succeed or not is not a good way to ruin your productive day. Leave alone seeing result from non-working proxy setup on browser, athough it&amp;#39;s immediate and a lot faster to troubleshoot but it is also applied.&lt;/p&gt;

&lt;p&gt;Thus this time, I think it&amp;#39;s a good idea to sit down and make sure those applications and commands works reliably with proxy setup (by any mean).&lt;/p&gt;

&lt;h2 id=&quot;proxy-setup&quot;&gt;Proxy Setup&lt;/h2&gt;

&lt;p&gt;Your proxy setup can be anything. It just needs to be a middle man between you and destination, and acts as a gatekeeper to forward your request to destination in which destination will not know that such request is coming from you but proxy itself.&lt;/p&gt;

&lt;p&gt;We&amp;#39;re interested in &lt;strong&gt;HTTP/HTTPs&lt;/strong&gt;, and &lt;strong&gt;SOCKS5&lt;/strong&gt; proxy.&lt;/p&gt;

&lt;p&gt;There&amp;#39;re bunch of options to setup proxy. It can be Shadowsocks (which operates on HTTP, and SOCKS5 proxy), or just normal HTTP proxy (several out there such as &lt;a href=&quot;https://www.charlesproxy.com/&quot;&gt;Charles Proxy&lt;/a&gt;, &lt;a href=&quot;https://tinyproxy.github.io/&quot;&gt;TinyProxy&lt;/a&gt;, etc).&lt;/p&gt;

&lt;p&gt;Solution presented in this writing aims for macOS, and Linux.&lt;/p&gt;

&lt;p&gt;For my case, I&amp;#39;m on macOS &lt;code&gt;10.12.4&lt;/code&gt;, with Shadowsock proxy set up. This mean my local machine provides HTTP, and SOCKS5 proxy. So I have options to either set proxy to use HTTP, or SOCKS5.&lt;/p&gt;

&lt;h2 id=&quot;set-up-to-use-proxy-for-ui-based-applications&quot;&gt;Set up to Use Proxy for UI-based applications&lt;/h2&gt;

&lt;p&gt;Although not limited to browser, it is a prime example of this kind of application.&lt;br&gt;
Let&amp;#39;s proceed with Chrome as it&amp;#39;s widely used, and is a top choice to debug and work with by developers. It should be very similar steps for other variant of browsers as well.&lt;/p&gt;

&lt;p&gt;Press &lt;code&gt;Cmd&lt;/code&gt; + &lt;code&gt;,&lt;/code&gt; or enter &lt;code&gt;chrome://settings&lt;/code&gt; to open Settings.&lt;br&gt;
Find &lt;code&gt;Network&lt;/code&gt; section, and click on &lt;code&gt;Change proxy settings...&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/14/chrome-network-settings.png&quot; alt=&quot;Chrome Network Settings&quot;&gt;&lt;/p&gt;

&lt;p&gt;Then you will see a dialog window similar to below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/14/set-chrome-http-proxy.png&quot; alt=&quot;Set Chrome HTTP Proxy&quot;&gt;&lt;/p&gt;

&lt;p&gt;as my proxy on local machine provides HTTP, and SOCKS5, then I set it via&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Web Proxy (HTTP)&lt;/strong&gt; - &lt;code&gt;127.0.0.1&lt;/code&gt; with port &lt;code&gt;1087&lt;/code&gt;&lt;br&gt;
Check your port according to your proxy setup. In this case, it&amp;#39;s &lt;code&gt;1087&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Secure Web Proxy (HTTPS)&lt;/strong&gt; - &lt;code&gt;127.0.0.1&lt;/code&gt; with port &lt;code&gt;1087&lt;/code&gt;&lt;br&gt;
My proxy doesn&amp;#39;t provide HTTPS thus I set it to just normally use what it provides in HTTP. So this means it will forward HTTPS request to HTTP one.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Personally, I don&amp;#39;t think we really need HTTPS for local proxy stuff as it waste time and resource on doing handshake, encryption and decryption in which we don&amp;#39;t really need it if we know we are on the secure side. Of course proxy will handle secure request after that (if we browse or request to secure site).&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;SOCKS Proxy&lt;/strong&gt; - &lt;code&gt;127.0.0.1&lt;/code&gt; with port &lt;code&gt;1086&lt;/code&gt;&lt;br&gt;
Check your port according to your proxy setup. In this case, it&amp;#39;s &lt;code&gt;1086&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We&amp;#39;re done.&lt;/p&gt;

&lt;p&gt;We will see how we can verify whether it can operate as expect in &lt;a href=&quot;#verifying&quot;&gt;Verifying&lt;/a&gt; section later. Now if you can browse without 404 error, that means most likely it works as expect.&lt;/p&gt;

&lt;p&gt;In additional, from my use case I didn&amp;#39;t have other UI-based applications that needs to be configured its network to be through proxy. So in case you have some other applications that need to work with proxy. Occasionally, that application should provide such configuration similar to what we&amp;#39;ve done above. Just look inside its preferences, or setting somewhere.&lt;/p&gt;

&lt;h2 id=&quot;set-up-to-use-proxy-for-terminal-commands&quot;&gt;Set up to Use Proxy for Terminal Commands&lt;/h2&gt;

&lt;p&gt;This part might need slightly more effort. Some commands have their own way of configuring proxy setting. They might need to be set via either environment variables, or specific configuration file. Some commands might not work with SOCKS proxy but only HTTP proxy.&lt;/p&gt;

&lt;p&gt;I will cover specifically for the following terminal commands&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;curl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;other misc commands&lt;/code&gt; - utilize system-wide setup of proxy setting via environment variables&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;git&quot;&gt;git&lt;/h3&gt;

&lt;p&gt;Set it globally via &lt;code&gt;git-config&lt;/code&gt; as follows&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HTTP Proxy&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;git config --global http.proxy http://127.0.0.1:1087&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTTPS Proxy&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;git config --global https.proxy http://127.0.0.1:1087&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SOCKS5 Proxy&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;   git config --global http.proxy socks5://127.0.0.1:1086
   git config --global https.proxy socks5://127.0.0.1:1086
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or you can also configure it manually by editing &lt;code&gt;~/.gitconfig&lt;/code&gt; to add the following lines appendingly into a file&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HTTP/HTTPS proxy&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;http]
   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;https]
     proxy &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; http://127.0.0.1:1087
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SOCKS proxy&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;http]
   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;https]
     proxy &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; socks5://127.0.0.1:1086
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;npm&quot;&gt;npm&lt;/h3&gt;

&lt;p&gt;Set it via &lt;code&gt;npm config&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HTTP/HTTPS proxy&lt;/strong&gt; - &lt;code&gt;npm config set proxy http://127.0.0.1:1087&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;or you can manually configure &lt;code&gt;~/.npmrc&lt;/code&gt; file by adding the following line&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HTTP/HTTPS proxy&lt;/strong&gt; - &lt;code&gt;proxy=http://127.0.0.1:1087&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It &lt;a href=&quot;https://github.com/npm/npm/issues/6204#issuecomment-55836088&quot;&gt;doesn&amp;#39;t&lt;/a&gt; support SOCKS5.&lt;/p&gt;

&lt;h3 id=&quot;curl&quot;&gt;curl&lt;/h3&gt;

&lt;p&gt;Set its proxy setting by creating (if not yet exist) &lt;code&gt;~/.curlrc&lt;/code&gt; file with the following content&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HTTP/HTTPS proxy&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;   proxy &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://127.0.0.1:1087&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SOCKS5 proxy&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;   socks5 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://127.0.0.1:1086&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;other-misc-commands&quot;&gt;Other misc commands&lt;/h3&gt;

&lt;p&gt;For other commands, usually we can just set proxy globally for system-wide via environment variables by adding following lines into your &lt;code&gt;~/.bash_profile&lt;/code&gt; (but use &lt;code&gt;~/.bashrc&lt;/code&gt; on Linux).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HTTP/HTTPS proxy&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;   &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;http_proxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://127.0.0.1:1087
   &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;https_proxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://127.0.0.1:1087
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SOCKS5 proxy&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;   &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;http_proxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;socks5://127.0.0.1:1086
   &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;https_proxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;socks5://127.0.0.1:1086
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After that execute &lt;code&gt;source ~/.bash_profile&lt;/code&gt; to source the setting and make sure those environment variables are taken into effect. I recommend to configure it with your &lt;code&gt;~/.bash_profile&lt;/code&gt; script as it will take effect even after reboot.&lt;/p&gt;

&lt;p&gt;Beware that if you set it to SOCKS5 proxy, commands that doesn&amp;#39;t support SOCKS5 will shout out error. A great example is &lt;code&gt;ngrok&lt;/code&gt; which doesn&amp;#39;t support SOCKS5 but it will let you know.&lt;/p&gt;

&lt;p&gt;So in general case, HTTP/HTTPS proxy might serve you better unless you&amp;#39;re willing to re-configure it back and forth.&lt;/p&gt;

&lt;h2 id=&quot;verifying&quot;&gt;&lt;a id=&quot;verifying&quot;&gt;&lt;/a&gt;Verifying&lt;/h2&gt;

&lt;p&gt;Now it&amp;#39;s time to verify our proxy configuration no matter which way you had done to configure it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You have an option to use UI-based application i.e. &lt;a href=&quot;https://www.wireshark.org/&quot;&gt;WireShark&lt;/a&gt;. But I prefer commandline-based solution. Anyway, the same concept can be applied to use with WireShark too.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;preparation&quot;&gt;Preparation&lt;/h3&gt;

&lt;p&gt;We&amp;#39;re going to use &lt;code&gt;ngrep&lt;/code&gt; to capture packets for our &lt;strong&gt;local network interface&lt;/strong&gt; filtering for port we&amp;#39;re interested in knowing either &lt;code&gt;1087&lt;/code&gt; for HTTP/HTTPS, or &lt;code&gt;1086&lt;/code&gt; for SOCKS5.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install &lt;code&gt;ngrep&lt;/code&gt; by executing &lt;code&gt;brew install ngrep&lt;/code&gt; (or &lt;code&gt;apt-get install apt-get&lt;/code&gt; on Linux).&lt;/li&gt;
&lt;li&gt;Then check out the name of your local network interface as we will use its name as parameter to &lt;code&gt;ngrep&lt;/code&gt; to capture packets live.&lt;br&gt;
Execute &lt;code&gt;ifconfig&lt;/code&gt;.&lt;br&gt;
Result would be similar to as follows.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;   haxpors-mbp:~ haxpor&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ifconfig
   lo0: &lt;span class=&quot;nv&quot;&gt;flags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8149&amp;lt;UP,LOOPBACK,RUNNING,PROMISC,MULTICAST&amp;gt; mtu 16384
       &lt;span class=&quot;nv&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1203&amp;lt;RXCSUM,TXCSUM,TXSTATUS,SW_TIMESTAMP&amp;gt;
       inet 127.0.0.1 netmask 0xff000000
       inet6 ::1 prefixlen 128
       inet6 fe80::1%lo0 prefixlen 64 scopeid 0x1
       nd6 &lt;span class=&quot;nv&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;201&amp;lt;PERFORMNUD,DAD&amp;gt;
   gif0: &lt;span class=&quot;nv&quot;&gt;flags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8010&amp;lt;POINTOPOINT,MULTICAST&amp;gt; mtu 1280
   stf0: &lt;span class=&quot;nv&quot;&gt;flags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0&amp;lt;&amp;gt; mtu 1280
   en1: &lt;span class=&quot;nv&quot;&gt;flags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8863&amp;lt;UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST&amp;gt; mtu 1500
       ether 20:c9:d0:d7:17:c5
       inet6 fe80::888:7a63:946e:c358%en1 prefixlen 64 secured scopeid 0x4
       inet 192.168.0.100 netmask 0xffffff00 broadcast 192.168.0.255
       nd6 &lt;span class=&quot;nv&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;201&amp;lt;PERFORMNUD,DAD&amp;gt;
       media: autoselect
       status: active
   en0: &lt;span class=&quot;nv&quot;&gt;flags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8863&amp;lt;UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST&amp;gt; mtu 1500
       &lt;span class=&quot;nv&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;10b&amp;lt;RXCSUM,TXCSUM,VLAN_HWTAGGING,AV&amp;gt;
       ether a8:20:66:2a:77:2f
       nd6 &lt;span class=&quot;nv&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;201&amp;lt;PERFORMNUD,DAD&amp;gt;
       media: autoselect &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;none&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
       status: inactive
   fw0: &lt;span class=&quot;nv&quot;&gt;flags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8822&amp;lt;BROADCAST,SMART,SIMPLEX,MULTICAST&amp;gt; mtu 4078
       lladdr a8:20:66:ff:fe:7d:48:0a
       media: autoselect &amp;lt;full-duplex&amp;gt;
       status: inactive
   ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From result, we know that our local network interface&amp;#39;s name is &lt;code&gt;lo0&lt;/code&gt; which you can see it has IP address of &lt;code&gt;127.0.0.1&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;verify-npm&quot;&gt;Verify npm&lt;/h3&gt;

&lt;p&gt;We had &lt;code&gt;ngrep&lt;/code&gt; and local network interface name already. Next we&amp;#39;re going to verify &lt;code&gt;npm install bfet&lt;/code&gt; command whether it actually went through our proxy as set to be on HTTP/HTTPS (port &lt;code&gt;1087&lt;/code&gt;) setting or not.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Execute &lt;code&gt;sudo ngrep -q -d lo0 -W byline port 1087&lt;/code&gt;&lt;br&gt;
There&amp;#39;re bunch of options used in this command. You can see this &lt;a href=&quot;https://linux.die.net/man/8/ngrep&quot;&gt;man&lt;/a&gt; page for explanation of each parameter used in above command. Basically, it will start to capture packets on &lt;code&gt;lo0&lt;/code&gt; network interface filtering for packets involving port &lt;code&gt;1087&lt;/code&gt; with other options affecting how much of information should printed out on console.&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;You can also remove &lt;code&gt;port 1087&lt;/code&gt; out thus more packets although might not be the one you&amp;#39;re interested will show on console but for the ease in digesting information here let&amp;#39;s go with port filtering.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;   haxpors-mbp:~ haxpor&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo ngrep -q -d en1 -W byline port 1087
   Password:
   interface: en1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;192.168.0.0/255.255.255.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
   filter: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ip or ip6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; and &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; port 1087 &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Leave it running, and don&amp;#39;t worry if you see some logs coming out already.&lt;br&gt;
   We will go back to see its result according to our execution of target command later.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open a new terminal window, then execute &lt;code&gt;npm install bfet&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Go back to see result from &lt;code&gt;ngrep&lt;/code&gt; as it&amp;#39;s running at the moment.&lt;br&gt;
You should see something similar to following. Also you can hit &lt;code&gt;Cmd&lt;/code&gt; + &lt;code&gt;F&lt;/code&gt; to search for text in interest to see.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;   T 127.0.0.1:63066 -&amp;gt; 127.0.0.1:1087 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;AP]
   CONNECT registry.npmjs.org:443 HTTP/1.1.
   accept-encoding: gzip.
   accept: application/json.
   referer: install bfet.
   user-agent: npm/4.1.2 node/v7.5.0 darwin x64.
   host: registry.npmjs.org:443.
   Connection: close.
   .


   T 127.0.0.1:1087 -&amp;gt; 127.0.0.1:63066 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;AP]
   HTTP/1.1 200 Connection established.
   .


   T 127.0.0.1:63066 -&amp;gt; 127.0.0.1:1087 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;AP]
   ....
   ........?&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;..:s.....b....&amp;amp;.n.T..n.
   &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;.xi..n./.+.0.,...&lt;span class=&quot;s1&quot;&gt;'.g.(.k.$...
   .........j.i.h.9.8.7.6.2...*.&amp;amp;.......=.5.#...........@.?.&amp;gt;.3.2.1.0.1.-.).%.......&amp;lt;./.....o.........registry.npmjs.org.........
   .............................
   .#..... ................................3t..
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let&amp;#39;s inspect packets we got above.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;T 127.0.0.1:63066 -&amp;gt; 127.0.0.1:1087 [AP]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It uses HTTP &lt;a href=&quot;https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9.9&quot;&gt;CONNECT method&lt;/a&gt; to initiate &lt;a href=&quot;https://en.wikipedia.org/wiki/HTTP_tunnel&quot;&gt;HTTP tunneling&lt;/a&gt; by which the command (running on port &lt;code&gt;63066&lt;/code&gt;) asks local proxy server (port &lt;code&gt;1087&lt;/code&gt;) to forward such HTTPS request. The tunnel (thus CONNECT method) is especially created for requesting HTTPS website which is &lt;code&gt;registry.npmjs.org:443&lt;/code&gt; as seen in this case.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;T 127.0.0.1:1087 -&amp;gt; 127.0.0.1:63066 [AP]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Proxy sent acknowledge packet back indicating that it&amp;#39;s successfully created a HTTP tunnel. It&amp;#39;s ready to exchange data through proxy from now on.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;T 127.0.0.1:63066 -&amp;gt; 127.0.0.1:1087 [AP]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;One of many packets sending back and forth during HTTP tunneling session. In this case, &lt;code&gt;npm&lt;/code&gt; command usually sends some request for a package at &lt;code&gt;registry.npmjs.org&lt;/code&gt;. It is encrypted due to SSL as it&amp;#39;s end-to-end communication. The dot (&lt;code&gt;.&lt;/code&gt;) we see is default character to show when such character is non-printable.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So you can see that the connection is well made with proxy. Basically verified that it works as expect.&lt;/p&gt;

&lt;h3 id=&quot;verify-curl&quot;&gt;Verify curl&lt;/h3&gt;

&lt;p&gt;We had &lt;code&gt;ngrep&lt;/code&gt; and local network interface name as previously tested. Next we&amp;#39;re going to verify &lt;code&gt;curl -i http://blog.wasin.io&lt;/code&gt; command whether it actually went through our proxy as set to be on SOCKS5 (port &lt;code&gt;1086&lt;/code&gt;) or not.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Reason to use &lt;code&gt;http://blog.wasin.io&lt;/code&gt; is that it&amp;#39;s not HTTPS thus we&amp;#39;re going to see actual text result from request to such target website.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Execute &lt;code&gt;sudo ngrep -q -d lo0 -W byline port 1086&lt;/code&gt;&lt;br&gt;
You will see&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;   haxpors-mbp:~ haxpor&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo ngrep -q -d en1 -W byline port 1086
   Password:
   interface: en1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;192.168.0.0/255.255.255.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
   filter: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ip or ip6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; and &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; port 1086 &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Open a new terminal window, then execute &lt;code&gt;curl -i http://blog.wasin.io&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Go back to see result from &lt;code&gt;ngrep&lt;/code&gt; as it&amp;#39;s running at the moment.&lt;br&gt;
You should see something similar to following.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;   T 127.0.0.1:52924 -&amp;gt; 127.0.0.1:1086 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;AP]
   GET / HTTP/1.1.
   Host: blog.wasin.io.
   User-Agent: curl/7.50.3.
   Accept: &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.
   .


   T 127.0.0.1:1086 -&amp;gt; 127.0.0.1:52924 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;AP]
   HTTP/1.1 200 OK.
   Server: GitHub.com.
   Content-Type: text/html; &lt;span class=&quot;nv&quot;&gt;charset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;utf-8.
   Last-Modified: Fri, 10 Mar 2017 19:23:24 GMT.
   Access-Control-Allow-Origin: &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.
   Expires: Mon, 13 Mar 2017 19:33:23 GMT.
   Cache-Control: max-age&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;600.
   X-GitHub-Request-Id: 3E76:06EE:41E22E9:53B6101:58C6F1AB.
   Content-Length: 19899.
   Accept-Ranges: bytes.
   Date: Mon, 13 Mar 2017 20:42:39 GMT.
   Via: 1.1 varnish.
   Age: 380.
   Connection: keep-alive.
   X-Served-By: cache-hkg6825-HKG.
   X-Cache: HIT.
   X-Cache-Hits: 1.
   X-Timer: S1489437759.092925,VS0,VE0.
   Vary: Accept-Encoding.
   X-Fastly-Request-ID: 60215ccfdc736e50178b0268f4fc9b3053c1e14d.
   .
   &amp;lt;!DOCTYPE html&amp;gt;
   &amp;lt;html&amp;gt;
   ... the less or HTML code ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You see that such command on port &lt;code&gt;52924&lt;/code&gt; created a request message in SOCKS5 message and sent it to local proxy server listening on port &lt;code&gt;1086&lt;/code&gt;. In return, proxy gets the actual response back including website&amp;#39;s source code in HTML.&lt;/p&gt;

&lt;p&gt;So it works as expect.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;We have learned how to properly configure proxy setting for UI-based applications and terminal commands. Also we knew a basic way to verify that our tools are working as expect via &lt;code&gt;ngrep&lt;/code&gt;. Combine these together to carry out Internet operation through proxy in network environment that needs it, and be able to troubleshoot the problem when we faced with a long waiting time in getting a result back from using application or commandlines.&lt;/p&gt;
</description>
        <pubDate>Tue, 14 Mar 2017 00:03:00 +0800</pubDate>
        <link>http://blog.wasin.io/blog/2017/03/14/setup-and-verify-applications-and-terminal-commands-to-work-reliably-with-proxy-on-macos-and-linux.html</link>
        <guid isPermaLink="true">http://blog.wasin.io/blog/2017/03/14/setup-and-verify-applications-and-terminal-commands-to-work-reliably-with-proxy-on-macos-and-linux.html</guid>
        
        <category>command</category>
        
        <category>commands</category>
        
        <category>terminal</category>
        
        <category>proxy</category>
        
        <category>network</category>
        
        <category>linux</category>
        
        <category>macos</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>As Developers You Don't Need Normal Social Account Verified, But You Might Need This Instead</title>
        <description>&lt;p&gt;No doubt getting verified on account is such a privilege status you can have on social network ecosystem.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/verified/social-account-verified.png&quot; alt=&quot;Levels&amp;#39;s verified account on twitter&quot;&gt;&lt;/p&gt;

&lt;p&gt;It can give you a sense of self-worth, and attention. But yes, real world is not going to give you away freely such verified status without you doing nothing.&lt;br&gt;
I know it&amp;#39;s a real hard work, you need to give something to the world, make impact, there&amp;#39;re lots of factors getting in the way for &lt;strong&gt;verified&lt;/strong&gt; status.&lt;/p&gt;

&lt;p&gt;No matter what it is. It&amp;#39;s ok.&lt;/p&gt;

&lt;p&gt;As developers, something you can do about it right now beside obsessing with such status is to get verified in every commit of code you wrote especially on Github!&lt;/p&gt;

&lt;p&gt;You get that right. I mean something like this...&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/verified/commit-verified.png&quot; alt=&quot;verified on commit as shown on Github&quot;&gt;  &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/verified/commit-verified2.png&quot; alt=&quot;verified on commit as shown on Github - 2&quot;&gt;&lt;/p&gt;

&lt;p&gt;Having that means every commit you&amp;#39;ve pushed is actually from you. It gives a sense of self-worth in every commit right?&lt;/p&gt;

&lt;p&gt;So let&amp;#39;s see how can we achieve that&lt;/p&gt;

&lt;h2 id=&quot;how-to-get-verified-on-every-commit-on-github&quot;&gt;How To Get Verified On Every Commit on Github&lt;/h2&gt;

&lt;p&gt;What I tested is on macOS. But it should work similar to other platform, or you might need to adapt a little bit.&lt;/p&gt;

&lt;h3 id=&quot;generate-a-gpg-key&quot;&gt;Generate a GPG key&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Download gpg tool via &lt;code&gt;brew install gpg&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Generate key via &lt;code&gt;gpg --gen-key&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Then specify the key you want, in this case it&amp;#39;s default to &lt;code&gt;RSA and RSA&lt;/code&gt;, just press &lt;code&gt;Enter&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Enter key size. Go for maximum of &lt;code&gt;4096&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Enter the length of time until the key would be expired. Press &lt;code&gt;Enter&lt;/code&gt; to go for default selection indicating that there&amp;#39;s no expiration.&lt;/li&gt;
&lt;li&gt;Enter a valid e-mail address that you signed up on Github.&lt;/li&gt;
&lt;li&gt;Type a passphrase.&lt;/li&gt;
&lt;li&gt;Execute &lt;code&gt;gpg --list-secret-keys --keyid-format LONG&lt;/code&gt; to list GPG keys.&lt;br&gt;
Result you got is similar to below&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;   haxpors-mbp:verified haxpor&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gpg --list-secret-keys --keyid-format LONG
   /Users/haxpor/.gnupg/secring.gpg
   --------------------------------
   sec   4096R/BD496CEDB4686EF8 2017-02-10
   uid                          Wasin Thonkaew &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Github GPG Key&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &amp;lt;haxpor@gmail.com&amp;gt;
   ssb   4096R/C818714CCD3AB514 2017-02-10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Copy GPG key ID. From result above, it&amp;#39;s &lt;code&gt;BD496CEDB4686EF8&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Execute &lt;code&gt;gpg --armor --export BD496CEDB4686EF8&lt;/code&gt;. But substitute your key id instead of using &lt;code&gt;BD496CEDB4686EF8&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Copy the result text from such command. We will use it in next section.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;add-gpg-key-to-github-account&quot;&gt;Add GPG key to Github Account&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Browse to Github website.&lt;/li&gt;
&lt;li&gt;On upper-right corner, click on your profile photo, then click &lt;code&gt;Settings&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;On the left side-bar, click on &lt;code&gt;SSH and GPG keys&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Paste the text you copied from earlier section.&lt;/li&gt;
&lt;li&gt;Click on &lt;code&gt;Add GPG key&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Confirm the action by entering your Github password.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;set-up-git-to-sign-all-commits&quot;&gt;Set up Git to Sign All Commits&lt;/h3&gt;

&lt;p&gt;Use key ID i.e. &lt;code&gt;BD496CEDB4686EF8&lt;/code&gt; as you got from earlier section and specify in these commands.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Execute &lt;code&gt;git config --global user.signingkey BD496CEDB4686EF8&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Execute &lt;code&gt;git config --global commit.gpgsign true&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Above will let git know that the default key id to use in every signing commit is &lt;code&gt;BD496CEDB4686EF8&lt;/code&gt;, and you will be signing every commit by default.&lt;/p&gt;

&lt;h3 id=&quot;for-safety-configure-to-make-it-work&quot;&gt;(for safety) Configure to Make it Work&lt;/h3&gt;

&lt;p&gt;These commands might not be needed but for safety, I recommend to do it anyway to make it works.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Edit &lt;code&gt;~/.gnupg/gpg.conf&lt;/code&gt;, and add following to the file.&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;   default-key BD496CEDB4686EF8
   no-tty
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will set the default key id to use, and another is to make auto-signed commit work with GUI software. In short, just add them.
* Execute &lt;code&gt;git config --global gpg.program $(which gpg)&lt;/code&gt;. This will set which gpg program to use with git.&lt;/p&gt;

&lt;h3 id=&quot;set-to-make-it-not-ask-passphraase-all-the-time&quot;&gt;Set to Make It Not Ask Passphraase All The Time&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Install &lt;code&gt;gpg-agent&lt;/code&gt; and &lt;code&gt;pinentry-mac&lt;/code&gt; via &lt;code&gt;brew install gpg-agent pinentry-mac&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Uncomment &lt;code&gt;use-agent&lt;/code&gt; line in &lt;code&gt;~/.gnupg/gpg.conf&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Add the following lines into &lt;code&gt;~/.gnupg/gpg-agent.conf&lt;/code&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;   use-standard-socket
   pinentry-program /usr/local/bin/pinentry-mac
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Link pinentry and agent together by adding the following to &lt;code&gt;~/.bash_profile&lt;/code&gt; (or your case might be &lt;code&gt;~/.profile&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;   &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; -f ~/.gnupg/.gpg-agent-info -a -n &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;pgrep gpg-agent&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;then
     &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.gnupg/.gpg-agent-info
     &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;GPG_AGENT_INFO
     &lt;span class=&quot;nv&quot;&gt;GPG_TTY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;tty&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
     &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;GPG_TTY
   &lt;span class=&quot;k&quot;&gt;else
     &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;gpg-agent --daemon --write-env-file ~/.gnupg/.gpg-agent-info&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Now whenever you do &lt;code&gt;git commit&lt;/code&gt;, it will ask for passphrase for the &lt;strong&gt;first&lt;/strong&gt; time only, save it to keychain, then next time it will automatically enter that for you in every commit.&lt;/p&gt;

&lt;p&gt;You will have &lt;code&gt;verified&lt;/code&gt; status tagged along with each commit on Github.&lt;br&gt;
Now go and get verified developers!&lt;/p&gt;
</description>
        <pubDate>Sat, 11 Feb 2017 19:06:00 +0800</pubDate>
        <link>http://blog.wasin.io/blog/2017/02/11/as-developers-you-dont-need-normal-social-account-verified-but-you-might-need-this-instead.html</link>
        <guid isPermaLink="true">http://blog.wasin.io/blog/2017/02/11/as-developers-you-dont-need-normal-social-account-verified-but-you-might-need-this-instead.html</guid>
        
        <category>github</category>
        
        <category>social</category>
        
        <category>developers</category>
        
        <category>verify</category>
        
        <category>verified</category>
        
        <category>account</category>
        
        <category>git</category>
        
        <category>gpg</category>
        
        
        <category>blog</category>
        
      </item>
    
  </channel>
</rss>
